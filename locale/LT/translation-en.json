{
    "EVTDESC38321": "Giving to others what I may need in the future is not always the best choice. I've lost the \u00a7YCharitable\u00a7! trait.",
    "EVTDESC38322": "Sometimes sharing what I have with others feels good. I've lost the \u00a7YGreedy\u00a7! trait.",
    "wonder_library": "Great Library",
    "wonder_library_desc": "Books are precious, as the knowledge of things past and new are written in their pages. This beacon of knowledge will have capacity to store thousands of books, and will have reading facilities.",
    "String_Library": "Library",
    "String_library": "library",
    "String_Drama": "play",
    "String_Poetry": "poem book",
    "String_Architecture": "architecture book",
    "String_Philosophy": "philosophy book",
    "String_History": "history book",
    "String_Astronomy": "astronomy book",
    "String_Medical": "anatomy book",
    "String_aDrama": "a play",
    "String_aPoetry": "a poem book",
    "String_anArchitecture": "an architecture book",
    "String_aPhilosophy": "a philosophy book",
    "String_aHistory": "a history book",
    "String_anAstronomy": "an astronomy book",
    "String_aMedical": "an anatomy book",
    "String_ADrama": "A play",
    "String_APoetry": "A poem book",
    "String_AnArchitecture": "Architecture book",
    "String_APhilosophy": "Philosophy book",
    "String_AHistory": "History book",
    "String_AnAstronomy": "Astronomy book",
    "String_AMedical": "Anatomy book",
    "String_Writer": "writer",
    "String_Poet": "poet",
    "String_Architect": "architect",
    "String_Philosopher": "philosopher",
    "String_Historian": "historian",
    "String_Astronomer": "astronomer and philosopher",
    "String_Medic": "physician",
    "String_greek": "Greek",
    "String_roman": "Roman",
    "String_Euripedes": "Euripedes",
    "String_Sophocles": "Sophocles",
    "String_Aristophanes": "Aristophanes",
    "String_Philemon": "Philemon",
    "String_Aeschylus": "Aeschylus",
    "String_Archilochus": "Archilochus",
    "String_Alcman_of_Sparta": "Alcman of Sparta",
    "String_Theocritus": "Theocritus",
    "String_Sappho": "Sappho",
    "String_Asclepiades_of_Samos": "Asclepiades of Samos",
    "String_Hermodorus_of_Salamis": "Hermodorus of Salamis",
    "String_Vitruvius": "Vitruvius",
    "String_Rabirius": "Rabirius",
    "String_Cocceius_Auctus": "Cocceius Auctus",
    "String_Plato": "Plato",
    "String_Aristotle": "Aristotle",
    "String_Pythagoras": "Pythagoras",
    "String_Thales_of_Mileto": "Thales of Mileto",
    "String_Zeno_of_Elea": "Zeno of Elea",
    "String_Herodotus": "Herodotus",
    "String_Thucydides": "Thucydides",
    "String_Polybius": "Polybius",
    "String_Strabo": "Strabo",
    "String_Hypatia_of_Alexandria": "Hypatia of Alexandria",
    "String_Ptolemy": "Ptolemy",
    "String_Aristarchus_of_Samos": "Aristarchus of Samos",
    "String_Hippocrates_of_Kos": "Hippocrates of Kos",
    "String_Virgil": "Virgil",
    "String_s": "s",
    "String_politely": "politely",
    "antiquity_book_poetry": "Lost Poetry Masterpiece",
    "antiquity_book_play": "Lost Play",
    "antiquity_book_medicine": "Lost Book of Medicine",
    "antiquity_book_philosophy": "Lost Philosophy Book",
    "antiquity_book_architecture": "Lost Architecture Book",
    "antiquity_book_history": "Book on ancient History",
    "antiquity_book_astronomy": "Lost Astronomy Book",
    "antiquity_book_fake": "Clever Forgery",
    "lost_masterpiece_book_desc": "[Root.GetBookThemeCap] by the famous [Root.GetAuthorNationAdj] [Root.GetAuthorTitle] [Root.GetAuthorName], that was thought to be lost forever, but was found and acquired by [Root.GetTitledNameWithNick] for his Great Library.",
    "fake_masterpiece_book_desc": "Initially thought to be [Root.GetBookThemeWithArticle] by the famous [Root.GetAuthorNationAdj] [Root.GetAuthorTitle] [Root.GetAuthorName], it is now considered a clever forgery.",
    "tomb_armor_desc": "An ancient knight's armor found on a mysterious tomb.",
    "tomb_sword_desc": "An ancient knight's sword found on a mysterious tomb.",
    "tomb_scepter_desc": "An ancient scepter, adorned with many emeralds, which was found on an old king's tomb.",
    "terrible_armor": "Poorly Crafted Armor",
    "terrible_armor_desc": "Mostly a waste of good metal, the blacksmith who made this suit of armor was probably drunk when they did so.",
    "zweihander_sword": "[GetZweihanderSwordName]",
    "zweihander_sword_desc": "A two-handed powerful but heavy sword, that can only be properly handled by a strong warrior.",
    "String_ZweihanderSword": "Zweihander Sword",
    "String_TwoHandedSword": "Two-Handed Sword",
    "caught_with_forgery": "Forgery Discovered",
    "ate_beating_heart": "Heart-Eater",
    "opinion_liked_a_good_joke": "Liked a Good Joke",
    "opinion_refused_invitation_to_meet": "Refused my Invitation",
    "recruit_academy_hero": "Recruit Academy Hero",
    "recruit_academy_hero_desc": "The \u00a7YTraining Academy\u00a7! in my \u00a7YAmphitheater\u00a7! possesses many well-trained young warriors. Maybe the best one out of them will make a good military commander.",
    "has_not_recruited_in_5_years_TT": " Has not recruited an Academy Hero in the last 5 years.",
    "gladiator_commander_TT": "A gladiator-trained warrior appears at the court of \u00a7Y[Root.GetTitledName]\u00a7!.",
    "gladiator": "Gladiator",
    "gladiator_desc": "This character trained as a Gladiator in the arena.",
    "EVTDESCHF23002_C": "The priests drag [From.GetTitledFirstName] screaming to the [the_temple.GetName], they place [From.GetHerHim] on the [the_sacrificial_altar.GetName] on top of the temple, and slice [From.GetHerHim] open with a ceremonial dagger. They then tear out [From.GetHerHis] still beating heart to the cheers of the assembled crowd.",
    "EVTDESCHF23002_D": "The priests drag [From.GetTitledFirstName] screaming to the top of the [the_temple.GetName] and they keep [From.GetHerHim] steady on the [the_sacrificial_altar.GetName] that stands there while I slice [From.GetHerHim] open with a ceremonial dagger. I then tear out [From.GetHerHis] still beating heart to the cheers of the assembled crowd.",
    "EVTOPTBHF23002": "I eat the beating heart!",
    "EVTOPTBHF23002_TT": "This option is available because you have the \u00a7Y[the_sacrificial_altar.GetName]\u00a7!",
    "EVT_TITLE_LT_20010": "The Lost Book",
    "EVTDESC_LT_20010.1": "A visitor to my court told me that in [book_province.GetName], in the [book_province_realm.GetFullBaseName] he heard rumors that a rich merchant had acquired an unheard of [Root.GetBookTheme] by the famous [Root.GetAuthorNationAdj] [Root.GetAuthorTitle] [Root.GetAuthorName].",
    "EVTDESC_LT_20010.2": "I received a letter from someone in [book_province.GetName], in the [book_province_realm.GetFullBaseName], claiming that he has in his possession a copy of [Root.GetBookThemeWithArticle] by the famous [Root.GetAuthorNationAdj] [Root.GetAuthorTitle] [Root.GetAuthorName]. But that work was unknown until now!",
    "EVTOPTA_LT_20010": "I shall ask [possible_emissary1.GetFirstName] to go and try to acquire the book!",
    "EVTOPTA_LT_20010_TT": "[possible_emissary1.GetFirstName] will be sent to [book_province.GetName].",
    "EVTOPTB_LT_20010": "Or maybe [possible_emissary2.GetFirstName] should go instead.",
    "EVTOPTB_LT_20010_TT": "[possible_emissary2.GetFirstName] will be sent to [book_province.GetName].",
    "EVTOPTC_LT_20010": "It is interesting news, but right now I have more pressing matters to attend to.",
    "EVTOPTD_LT_20010": "I actually do not care about missing books. The collection I have is enough.",
    "EVTOPTD_LT_20010_TT": "You will no longer be bothered with news about lost books.",
    "EVT_TITLE_LT_20020": "The Lost Book",
    "EVTDESC_LT_20020": "My courtier [emissary.GetTitledNameWithNick] returned today with the sad news that [emissary.GetHeShe] could not obtain the [Root.GetBookTheme] by the famous [Root.GetAuthorNationAdj] [Root.GetAuthorTitle] [Root.GetAuthorName], and is even not sure it really exists. [emissary.GetFirstName] returned the money that remained after the Journey expenses.",
    "EVTOPTA_LT_20020": "It is a pity.",
    "EVT_TITLE_LT_20030": "A Lost and Expensive Book",
    "EVTDESC_LT_20030": "My Lord [Root.GetTitle]\\n I [emissary.GetTitledNameWithNick], your humble servant, am still trying to obtain the [Root.GetBookTheme] by the famous [Root.GetAuthorNationAdj] [Root.GetAuthorTitle] [Root.GetAuthorName]. \\n Unfortunately I have run out of funds. Would your grace be so generous as to send me some extra money, I am almost sure to be able to find and acquire the book you seek.",
    "EVTOPTA_LT_20030": "I will send the money. It will be worth it!",
    "EVTOPTB_LT_20030": "No, it is too expensive. Let [emissary.GetHerHim] return empty handed.",
    "EVT_TITLE_LT_20035": "The Lost Book",
    "EVTDESC_LT_20035": "I just got news that [emissary.GetTitledNameWithNick] is staying in the court of [emissary_current_host.GetTitledNameWithNick] spending my money and with no intent of returning! And the [Root.GetBookTheme] by [Root.GetAuthorName] is nowhere to be found.",
    "EVTOPTA_LT_20035": "Oh no! I must be more careful choosing who to send next time.",
    "EVTOPTB_LT_20035": "Maybe somebody will take care of the traitor?",
    "EVTOPTB_LT_20035_TT": "You try to have [emissary.GetTitledNameWithNick] assassinated",
    "EVT_TITLE_LT_20036": "The Lost Book",
    "EVTDESC_LT_20036_DEAD": "The traitor [emissary.GetTitledNameWithNick] is no longer alive. And nobody will be able to trace [emissary.GetHerHis] death to me.",
    "EVTDESC_LT_20036_ALIVE": "Curses! The attempt on the life of the traitor [emissary.GetTitledNameWithNick] failed, and my involvement was discovered.",
    "EVTOPTA_LT_20036": "Nobody betrays me and gets away with it.",
    "EVTOPTB_LT_20036": "Maybe it was not such a good idea.",
    "EVT_TITLE_LT_20040": "The Lost Book!",
    "EVTDESC_LT_20040": "[emissary.GetTitledNameWithNick] has returned with the [Root.GetBookTheme] that was supposedly written by [Root.GetAuthorName]!\\n Maybe I should invite some learned scholars to discuss this precious finding? ",
    "EVTOPTA_LT_20040": "I will read the book and see by myself.",
    "EVTOPTB_LT_20040": "Let us send letters and invite some scholars",
    "EVTOPTC_LT_20040": "Just announce the discovery and store the book in my library",
    "EVTOPT_LT_20040_TT": "You gain the [the_book.GetName] as an artifact.",
    "EVT_TITLE_LT_20050": "The Lost Book is a Fake!",
    "EVTDESC_LT_20050": "A scholar working in my library, [the_whistleblower.GetTitledNameWithNick] is saying that my precious [Root.GetBookTheme] that was supposedly written by [Root.GetAuthorName] is falsification!\\n  I can imprison [the_whistleblower.GetHerHim], but on the other hand a courtier who speaks the truth might be a good person to have around me.",
    "EVTOPTA_LT_20050": "How dare [the_whistleblower.GetSheHe]? Imprison that imbecile [the_whistleblower.GetManWoman]!",
    "EVTOPTB_LT_20050": "I will reward [the_whistleblower.GetHerHim] for speaking the truth!",
    "EVT_TITLE_LT_20055": "This book seems to be a forgery!",
    "EVTDESC_LT_20055": "After a careful reading of the [Root.GetBookTheme] that was supposedly written by [Root.GetAuthorName] I believe it is a forgery. Nevertheless, the contents of the book are actually not bad.",
    "EVTOPTA_LT_20055": "I actually learned something from the book.",
    "EVTOPTB_LT_20055": "Burn the damned book!",
    "EVT_TITLE_LT_20060": "The Lost Book",
    "EVTDESC_LT_20060_real_book": "Many scholars accepted my invitation and gathered for several days discussing not only the book by [Root.GetAuthorName], but also other ancient knowledge. The book was considered as a lost masterpiece and my court is famous now as a center of culture, scholarly debate and knowledge.",
    "EVTDESC_LT_20060_fake_book": "Many scholars accepted my invitation and gathered for several days discussing not only the book by [Root.GetAuthorName], but also other ancient knowledge. Unfortunately, after much discussion, the book was considered as a forgery, but my court is famous now as a center for scholarly debate, culture and knowledge.",
    "EVTOPTA_LT_20060_real_book": "A center for culture. That sounds good.",
    "EVTOPTA_LT_20060_fake_book": "Good. And maybe next time I will actually obtain a masterpiece.",
    "CHRONICLE_FOUND_REAL_BOOK": "A book containing the lost [Root.GetBookTheme] by the famous [Root.GetAuthorNationAdj] [Root.GetAuthorTitle] [Root.GetAuthorName] was acquired and on this date a great meeting of scholars confirmed its authenticity. In those times, [wonder_province.GetName] was known as a place of culture, visited by scholars from afar. ",
    "EVT_TITLE_LT_20101": "A Discovery",
    "EVTDESC_LT_20101.1": "While digging the ground during the building of [wonder_or_upgrade.GetName], the workers came across some kind of door for what seems to be a closed chamber.",
    "EVTDESC_LT_20101.2": "The construction overseer on my [wonder_or_upgrade.GetName] just told me a worker fell in a hole while digging and found some bones. It seems to be some kind of old grave.",
    "EVTOPTA_LT_20101": "Let us spend some time and gold to investigate.",
    "EVTOPTA_LT_20101_TT": "Maybe there are some old valuables inside.\\n",
    "EVTOPTB_LT_20101": "Just ignore and continue the work.",
    "EVTOPTC_LT_20101": "I do not want to be bothered again with such petty details!",
    "EVTOPTC_LT_20101_TT": "You will no longer be bothered with news about findings during construction of the great works.\\n",
    "EVTOPTD_LT_20101": "It is probably an ancient tomb. Explore with caution.",
    "EVTOPTD_LT_20101_TT": "This option is available because you have either a high Learning, or the traits Erudite or Architect.\\n",
    "EVTDESC_LT_20110_accident": "While the workers were trying to dig there was a cave-in and several men were buried in the debris. And now we need to clear everything.",
    "EVTDESC_LT_20110_found_nothing": "After a few days digging, all that was found were old bones and broken vases. A waste of time and gold.",
    "EVTDESC_LT_20110_found_valuables_1": "After some digging, a big stone appeared, blocking an entrance. When the workers removed the stone, an old tomb was discovered, with a small quantity of silver and gold objects in it.",
    "EVTDESC_LT_20110_found_valuables_2": "The workers found a number of small connected underground chambers under the [wonder_or_upgrade.GetName] construction site with old burial remains, and a fair amount of silver and gold objects!",
    "EVTDESC_LT_20110_found_artifact": "The workers dug their way into a large chamber where some old lord was put to rest. In there they found some gold objects and a [found_artifact.GetName].",
    "EVTOPT_LT_20110_TT": "You gain the [found_artifact.GetName] as an artifact.\\n",
    "EVTOPTA_LT_20110": "On with the construction!",
    "EVTOPTA_LT_20110_TT_unhappy": "Not giving some compensation to the widows and orphans of the dead workers might give us problems in the future.\\n",
    "EVTOPTB_LT_20110": "It is all mine!",
    "EVTOPTB_LT_20110_TT_unhappy": "The workers might be upset if they receive nothing.\\n",
    "EVTOPTC_LT_20110": "Let us give to the workers a share of the gold.",
    "EVTOPTD_LT_20110": "I will keep both the valuables and the [found_artifact.GetName].",
    "EVTOPTE_LT_20110": "Let us distribute the gold to the workers as a reward.",
    "EVTOPTF_LT_20110": "We shall give some gold to the families of the victims.",
    "EVTOPTC_MNM_9115": "The smiths in our own [the_armory.GetName] are capable enough!",
    "EVTOPTC_MNM_9115_TT": "This option is available because you have a \u00a7Y[the_wonder.GetWonderTypeShortCap]\u00a7! with an \u00a7Y[the_armory.GetName]\u00a7!.",
    "MNM_9999_DESC_armor": "The castle blacksmith, more used to horseshoes and helmets than work fit for royalty, presented you with a dirty old box. \"Ta da\" he says, nervously, \"It was an armor you wanted right?\" he adds.",
    "EVTDESC_LT_20201": "My master [GetWeaponArmorSmith] came to see me in the throne room. [smith.GetSheHeCap] gestured towards [smith.GetHerHis] numerous assistants, who all carried examples of [smith.GetHerHis] work. 'Does my [Root.GetTitle] have anything special in mind?'",
    "EVTOPTA_zweihanded_LT_20201": "I want a heavy two-handed sword.",
    "EVTOPTA_MNM_LT_20201_TT": "This sword can only be handled by a strong warrior, but is sure to impress friend and foe alike.",
    "use_scary_upgrade": "Try to Intimidate",
    "use_scary_upgrade_desc": "Having a conversation with \u00a7Y[Root.GetFirstNameWithNick]\u00a7! in an appropriate place might convince [Root.GetHerHim] to be more supportive.",
    "use_scary_upgrade_tt": "You will take \u00a7Y[target_character.GetFirstNameWithNick]\u00a7! near the \u00a7Y[target_upgrade.GetName]\u00a7! in your \u00a7Y[target_wonder.GetName]\u00a7! and have a talk with [target_character.GetHerHim] about the importance of cooperation.",
    "use_scary_upgrade_cooldown_tt": "Has NOT attempted to intimidate a character in the past 2 years[From.GetScaryCD]",
    "string_scary_cd": " - you can try to intimidate a character again on: \u00a7Y[This.used_scary_upgrade_cd.GetExpiryDate]\u00a7!",
    "EVTDESC_LT_20301": "I invited [target_character.GetBestName] for a stroll today, saying I had something to show [target_character.GetHerHim]. Eventually we came to stop near my [target_upgrade.GetName]. I waited there in silence for several minutes, while [target_character.GetBestName] grew more and more uncomfortable, before I leaned in to say...",
    "EVTDESC_LT_20301_evil_reaction": "I invited [target_character.GetBestName] on a stroll today, saying I had something to show [target_character.GetHerHim]. Eventually we came to stop near my [target_upgrade.GetName]. I waited there in silence for several minutes, but [target_character.GetSheHe] seemed to be enjoying the view. Then I said...",
    "EVTOPTA_LT_20301": "...'I hope my meaning is clear'.",
    "EVTOPTA_LT_20301_TT": "the attempt to intimidate \u00a7Y[target_character.GetFirstNameWithNick]\u00a7! fails",
    "EVTOPTB_LT_20301": "...'I hope you understand how important this favor is'.",
    "EVTOPTB_LT_20301_TT": "the attempt to coerce a favor fails",
    "EVTOPTC_LT_20301": "...'What do you think of my toy?'.",
    "EVTOPTD_LT_20301": "... 'This bloody thing also scares me!'.",
    "EVTDESC_LT_20310": "[target_character.GetBestName] just laughed at me! Laughed really hard. I can still hear his laughs in my dreams.",
    "EVTOPTA_LT_20310": "Oh no!",
    "use_secluded_upgrade": "Private Conversation",
    "use_secluded_upgrade_desc": "Meeting \u00a7Y[Root.GetFirstNameWithNick]\u00a7! in a secluded place might be interesting.",
    "use_secluded_upgrade_tt": "You will invite \u00a7Y[target_character.GetFirstNameWithNick]\u00a7! to meet you in the \u00a7Y[target_upgrade.GetName]\u00a7! of the \u00a7Y[target_wonder.GetName]\u00a7! and have a private conversation with [target_character.GetHerHim].",
    "use_secluded_upgrade_cooldown_tt": "Has NOT invited a character for a private talk in the past \u00a7Y6\u00a7! months[From.GetSecludedCD]",
    "EVTDESC_LT_20405": "[From.GetBestName] invited me to meet [From.GetHerHim] in the [target_upgrade.GetName] of the [target_wonder.GetName].",
    "EVTOPTA_LT_20405": "I will accept.",
    "EVTOPTB_LT_20405": "I will refuse.",
    "EVTOPTC_LT_20405": "I will politely invent an excuse and refuse.",
    "EVTDESC_LT_20410": "[target_character.GetBestName] accepted my invitation to meet in the seclusion of the [target_upgrade.GetName] in the [target_wonder.GetName]. After some time talking...",
    "EVTOPTA_LT_20410": "...we will know each other a little better.",
    "EVTOPTB_LT_20410": "...I try to seduce [target_character.GetHerHim].",
    "EVTOPTB_LT_20410_TT": "I do not know how \u00a7Y[target_character.GetTitledFirstName]\u00a7! will react if I try to kiss [target_character.GetHerHim], but we might become lovers.",
    "EVTOPTC_LT_20410": "...I get my dagger out and try to stab [target_character.GetHerHim] in the heart.",
    "EVTOPTC_LT_20410_TT": "This option is available because you have either a high \u00a7YIntrigue\u00a7! or related traits.\\n",
    "EVTOPTC_LT_20410_TT_murder": "I better be good at fighting because \u00a7Y[From.GetTitledFirstName]\u00a7! might resist my murder attempt.",
    "EVTDESC_LT_20412": "[target_character.GetBestName] [target_character.GetPoliteRefuse] declined my invitation me to meet in the seclusion of the [target_upgrade.GetName] in the [target_wonder.GetName].",
    "EVTOPTA_LT_20412": "Too bad.",
    "EVTDESC_LT_20421": "I went to meet [From.GetBestName] in the seclusion of the [target_upgrade.GetName], in the [target_wonder.GetName]. We are having a pleasant conversation.",
    "EVTOPTA_LT_20421": "I am thoroughly impressed with [From.GetTitledFirstName]!",
    "EVTOPTB_LT_20421": "I am impressed with [From.GetTitledFirstName]!",
    "EVTOPTC_LT_20421": "Pleasant but not substantial.",
    "EVTDESC_LT_20422": "I think [From.GetBestName] was impressed with our conversation.",
    "EVTDESC_LT_20431": "I went to meet [From.GetBestName] in the seclusion of the [target_upgrade.GetName], in the [target_wonder.GetName]. After some pleasantries, [From.GetSheHe] grabs me and tries to kiss my mouth.",
    "EVTOPTA_LT_20431": "I kiss [From.GetHerHim] also.",
    "EVTOPTB_LT_20431": "I refuse [From.GetHerHim] and step back.",
    "EVTOPTC_LT_20431": "I get my dagger out and try to stab [From.GetHerHim] in the heart!",
    "EVTDESC_LT_20432": "[target_character.GetFirstName] returned my kiss, and more. We became lovers.",
    "EVTOPTA_LT_20432": "Life is good!.",
    "EVTDESC_LT_20434": "I tried to kiss [target_character.GetHerHim], but [target_character.GetSheHe] recoiled from me with disgust and fear on [target_character.GetHerHis] face.",
    "EVTOPTA_LT_20434": "Curses!",
    "EVTDESC_LT_20441": "I went to meet [From.GetBestName] in the seclusion of the [target_upgrade.GetName], in the [target_wonder.GetName]. After some pleasantries, [From.GetSheHe] pulls a dagger from under [From.GetHerHis] clothes and tries to stab me!",
    "EVTDESC_LT_20441_murderer_target": "While I approach my face, suddenly [From.GetTitledFirstName] pulls a dagger from under [From.GetHerHis] clothes and tries to stab me!",
    "EVTOPTA_LT_20441": "I try to run away.",
    "EVTOPTA_LT_20441_TT_escape": "you managing to escape.",
    "EVTOPTA_LT_20441_TT_wounded": "you managing to escape, but wounded.",
    "EVTOPTA_LT_20441_TT_dead": "you being killed while trying to escape.",
    "EVTOPTB_LT_20441": "I fight [From.GetHerHim]!",
    "EVTOPTB_LT_20441_TT_win": "you winning the fight.",
    "EVTOPTB_LT_20441_TT_lose": "you losing the fight.",
    "EVTDESC_LT_20450": "It was a very bad idea to go meet to meet [From.GetTitledFirstName] in the seclusion of the [target_upgrade.GetName]. I barely escaped with my life. My hands still tremble when I think of it.",
    "EVTDESC_LT_20450_wounded": "Fortunately [From.GetTitledFirstName]'s dagger missed my heart, and I managed to escape with my life. The physician says I will survive. Let us see.",
    "EVTOPTA_LT_20450": "Curses!",
    "EVTDESC_LT_20455": "As I see the blood slowly leaving my body, forming a pool on the ground, and the hands of death reaching for me, I now think of all the things I could have done if I knew this day would end like this.",
    "EVTOPTA_LT_20455": "Aaah...",
    "EVTDESC_LT_20460": "As my dagger is going for [From.GetHerHis] heart, [From.GetTitledFirstName] raises the arm and I miss my mark. Then [From.GetSheHe] just runs away. Now I will have to deal with the consequences.",
    "EVTDESC_LT_20460_wounded": "As my dagger is going for [From.GetHerHis] heart, [From.GetTitledFirstName] raises the arm and I miss the mark. I wound [From.GetHerHim], but [From.GetSheHe] manages to run away, leaving a trail of blood behind. Now I will have to deal with the consequences.",
    "EVTDESC_LT_20465": "Before [From.GetSheHe] can run away, I bury my dagger in [From.GetHerHis] chest! I leave [From.GetTitledFirstName] lying on the ground, a pool of blood forming around [From.GetHerHim]. [From.GetHerHisCap] face is frozen in a look of betrayal.",
    "EVTDESC_LT_20465_fight": "We fight each other, but in the end, I prevail and bury my dagger in [From.GetHerHis] chest! I leave [From.GetTitledFirstName] lying on the ground, a pool of blood forming around [From.GetHerHim].",
    "EVTOPTA_LT_20465": "So be it!",
    "CLOUD_SAVE": "Cloud Save",
    "EVT_TITLE_HFP_16001": "The Founding of Russia",
    "EVTDESC_HFP_16001": "After many years of tenaciously establishing new borders for our Empire, the time has come to officially declare ourselves the Tsardom of Russia. What a glorious day!",
    "EVTOPTA_HFP_16001": "All shall bow to [Root.GetBestName]...!",
    "EVT_TITLE_HFP_16002": "A New Russia",
    "EVTDESC_HFP_16002": "After many years of preparation, [From.GetBestName] has chosen to declare complete sovereignty over [From.GetHerHis] vast territories by founding the Tsardom of Russia.",
    "EVTOPTA_HFP_16002": "That hardly sounds necessary.",
    "create_russian_empire": "Create the Empire of Russia",
    "create_russian_empire_desc": "Holding the Empire of Rus is not enough \u0096 some are starting to think that 'the Empire of Russia' has a better ring to it...",
    "e_russian_empire": "Russia",
    "e_russian_empire_adj": "Russian",
    "russian_empire_cheaper_tribal_upgrades": "Lowers the requirements for upgrading Tribal Holdings to Castles",
    "EVTDESC_HFP_16006_book": "My [Root.GetLordLady], something has been found in the [inherited_artifact.GetArtifactStorage] a scribe catches up with me. \"An old book, from [previous_owner.GetTitledFirstName]?\" When I join [Root.GetHerHim] for a closer inspection, I have to agree with the assessment. \"Old indeed\", I sneeze. \"We should have someone care for it\", the scribe suggests.",
    "EVTDESC_HFP_16006_combat_weapon": "Upon inspecting the [inherited_artifact.GetArtifactStorage], my guards have found [inherited_artifact.GetName], an old weapon. \"It must have belonged to [previous_owner.GetTitledFirstName]\", they inform me. \"Shame it's not in better shape\", they mutter.",
    "EVTDESC_HFP_16006_armor": "I have recently inherited [inherited_artifact.GetName], a piece of armor, from [previous_owner.GetTitledFirstName]. \"I am not sure it's in any wearable condition, my [Root.GetLordLady]\" the quartermaster informs me, as I trace the pattern on it with one hand.",
    "EVTDESC_HFP_16006_quality_1": "I have recently inherited an item from [previous_owner.GetTitledFirstName]. \"It has probably seen better days, [Root.GetMasterMistress]\", the guard tells me, before continuing: \"We are sorry to bother you with this, we just weren't sure whether to get rid of it or not\".",
    "EVTDESC_HFP_16006_quality_2": "I have recently inherited [inherited_artifact.GetName] from [previous_owner.GetTitledFirstName]. It is not in good shape.",
    "EVTDESC_HFP_16006_quality_3": "The [inherited_artifact.GetArtifactStorage] currently houses a valuable item I inherited from [previous_owner.GetTitledFirstName]. It might need someone to look after it though.",
    "EVTDESC_HFP_16006_child": "What is it? I ask the guards. \"You have inherited this... [inherited_artifact.GetName]\", one of them explains. \"From [previous_owner.GetTitledFirstName]\", [Root.GetSheHe] continues. \"If you want to keep it, we'll store it for you, [Root.GetMasterMistress]. It might need some maintenance though.\"",
    "EVTOPTA_HFP_16006_1_A": "I suppose it could be worth something, one day...",
    "EVTOPTA_HFP_16006_1_B": "For sentimental reasons, I could have someone look it over.",
    "EVTOPTA_HFP_16006_2_A": "I'll pay to maintain it.",
    "EVTOPTA_HFP_16006_2_B": "Maintenance is to be expected, I guess.",
    "EVTOPTA_HFP_16006_3": "Money is not an issue.",
    "EVTOPTA_HFP_16006_4": "We cannot put a price on heirlooms like this. Spare no expense!",
    "EVTOPTB_HFP_16006_1": "Looks rather useless to me.",
    "EVTOPTB_HFP_16006_2": "We cannot afford to maintain all the old junk thrown our way.",
    "title_HFP_16006": "Old Treasures",
    "String_armory": "armory",
    "String_old_armory": "old armory",
    "String_treasury": "treasury",
    "String_house_of_worship": "chapel",
    "GetRelation_enemy": "enemy",
    "GetRelation_sway_target": "target of diplomatic efforts",
    "GetRelation_antagonist": "antagonist",
    "wonder_cathedral": "Grand Cathedral",
    "wonder_cathedral_desc": "A testament to the piety of its builder, the church stretches to the sky.",
    "wonder_mosque": "Great Mosque",
    "wonder_mosque_desc": "This building is a testament to the piousness of its builder.",
    "wonder_synagogue": "Great Synagogue",
    "wonder_synagogue_desc": "Anyone setting foot in the building will be reminded of the value of a religious community.",
    "wonder_temple_pagan": "Great Temple",
    "wonder_temple_pagan_desc": "The site of the temple is rumored to be the holiest ground in the realm.",
    "wonder_statue_ruler": "Ruler Statue",
    "wonder_statue_ruler_desc": "A ruler is immortalized in this grand statue.",
    "wonder_fortress": "Grand Fortress",
    "wonder_fortress_desc": "The fortress is a safe-haven, a home away from home for many warriors.",
    "wonder_underground_city": "Great Underground City",
    "wonder_underground_city_desc": "Partially carved from the very rock it sits on, only its owner knows exactly how far these tunnels sprawl.",
    "wonder_wall": "Great Walls",
    "wonder_wall_desc": "A mega-project, this is a construction of massive city walls.",
    "wonder_harbor": "Great Harbor",
    "wonder_harbor_desc": "Heavily trafficked, the magnificent Harbor is bringing both trade and tourism to the area.",
    "wonder_lighthouse": "Great Lighthouse",
    "wonder_lighthouse_desc": "A tall and visible landmark, the building lends a helping hand to sailors, guiding their ships into port at night.",
    "wonder_amphitheater": "Grand Amphitheater",
    "wonder_amphitheater_desc": "The epitome of high culture, the amphitheater is a unique attraction in the realm.",
    "wonder_palace": "Royal Palace",
    "wonder_palace_desc": "A regal symbol of the prestigious lineage of its builder, this palace is one of its kind.",
    "wonder_garden": "Magnificent Garden",
    "wonder_garden_desc": "The garden is a marvel of both science and beauty.",
    "wonder_university": "Grand University",
    "wonder_university_desc": "A high seat of learning, famous throughout the realm.",
    "wonder_mausoleum": "Grand Mausoleum",
    "wonder_mausoleum_desc": "A simple tomb is not enough for some rulers.",
    "wonder_pyramid": "Great Pyramid",
    "wonder_pyramid_desc": "Build it taller!, was apparently the last words of its architect.",
    "wonder_pagan_stones": "Great Stone Circle",
    "wonder_pagan_stones_desc": "Huge standing rocks are placed in a grand circle, with an opening towards the east, where the sun rises.",
    "wonder_pyramid_giza": "Great Pyramid of Khufu",
    "wonder_pyramid_giza_desc": "The strangely shaped pyramids have always been there.",
    "wonder_amphitheater_colosseum": "Colosseum",
    "wonder_amphitheater_colosseum_desc": "The amphitheater has seen many uses throughout the centuries, including gladiatorial and animal fights, and later even serving as market stalls for city merchants.",
    "wonder_cathedral_hagia_sophia": "Hagia Sophia",
    "wonder_cathedral_hagia_sophia_desc": "One of the most beautiful cathedrals on this part of the map.",
    "wonder_pagan_stones_stonehenge": "Stonehenge",
    "wonder_pagan_stones_stonehenge_desc": "Some think the rocks were placed by gods. Others say it's pagan superstition, but refuse to go near them.",
    "wonder_mausoleum_halicarnassus": "Mausoleum at Halicarnassus",
    "wonder_mausoleum_halicarnassus_desc": "A giant above-ground tomb, constructed by Mausolus, a satrap in the Persian Empire, for himself and Artemisia II of Caria.",
    "wonder_temple_solomon": "Temple of Solomon",
    "wonder_temple_solomon_desc": "A hill, deeply sacred to Jewish worshipers, as it is said to be the location of the ancient Temple of Solomon.",
    "wonder_lighthouse_alexandria": "Lighthouse of Alexandria",
    "wonder_lighthouse_alexandria_desc": "For a long time the tallest building in the world, the lighthouse is an impressive construction visible from far away, while also serving its purpose, guiding ships into port.",
    "upgrade_roads": "Great Roads",
    "upgrade_roads_desc": "The grand construction in the province has led to many well-connected roads being made in the realm.",
    "upgrade_watchtower_network": "Watchtower Network",
    "upgrade_watchtower_network_desc": "A network of watchtowers and garrisons has been founded across the realm.",
    "upgrade_spikes": "Spikes",
    "upgrade_spikes_desc": "The armaments surrounding the grand construction display a collection of heads on spikes.",
    "chance_to_spread_cruel_tt": "Tends to inspire characters to become \u00a7YCruel\u00a7!",
    "upgrade_tower": "Tower",
    "upgrade_tower_desc": "The tower can be seen from far away.",
    "upgrade_hypocausts": "Hypocausts",
    "upgrade_hypocausts_desc": "From an underground furnace, through ducts and vents, warm air is guided through the building.",
    "upgrade_heating_pipes": "Heating Pipes",
    "upgrade_heating_pipes_desc": "A complex system of pipes and hot water keeps the floor of the building warm.",
    "upgrade_retinue": "[FromFrom.GetWonderTypeShortCap] Retinue",
    "upgrade_retinue_desc": "A special unit of guards are stationed in the province, heightening security around the [FromFrom.GetWonderTypeShortCap].",
    "upgrade_gargoyles": "Gargoyles",
    "upgrade_gargoyles_desc": "The ugly creatures sticking out from the facade of the [FromFrom.GetWonderTypeShortCap] have an ominous air to them.",
    "upgrade_bells": "Bells",
    "upgrade_bells_desc": "While intended for ceremony, the bells can also be rung in times of danger, a warning which would be heard all over the province.",
    "upgrade_stained_glass_window": "Stained Glass Window",
    "upgrade_stained_glass_window_desc": "A beautiful piece of art reflecting a biblical scene.",
    "upgrade_relic_tomb": "Relic Tomb",
    "upgrade_relic_tomb_desc": "A place for storing artifacts.",
    "upgrade_grand_basilica": "Grand Basilica",
    "upgrade_grand_basilica_desc": "The arch-headed windows extend to several floors, bestowing the [FromFrom.GetWonderTypeShortCap] with an unparalleled level of grandeur.",
    "upgrade_catacombs": "Catacombs",
    "upgrade_catacombs_desc": "While subterranean passageways are a source of fascination, they are primarily a sacred space for religious practice.",
    "upgrade_giant_cross": "Giant Cross",
    "upgrade_giant_cross_desc": "On top of the [FromFrom.GetWonderTypeShortCap] is a big cross, embellishing the silhouette of the building.",
    "upgrade_bells_golden": "Golden Bells",
    "upgrade_bells_golden_desc": "The bells of the [FromFrom.GetWonderTypeShortCap] have been coated with a thin layer of gold.",
    "upgrade_statue_god": "Statue of a God",
    "upgrade_statue_god_desc": "The grand statue of [Root.Religion.GetRandomGodName] impresses both faithful and those foreign to the faith of [Root.PrimaryTitle.GetName].",
    "upgrade_temple_guards": "[FromFrom.GetWonderTypeShortCap] Guards",
    "upgrade_temple_guards_desc": "The [FromFrom.GetWonderTypeShortCap] guards are especially dedicated to the protection of the [FromFrom.GetWonderTypeShortCap].",
    "upgrade_sacrificial_altar": "Sacrificial Altar",
    "upgrade_sacrificial_altar_desc": "The people of [Root.PrimaryTitle.GetName] show their devotion to the gods by sacrificing living beings.",
    "upgrade_sacred_grove": "Sacred Grove",
    "upgrade_sacred_grove_desc": "In the middle of the grove, a tree is planted. As time passes, its branches will reach as tall as its roots, representing the connection between worlds.",
    "upgrade_prophecy_rooms": "Prophecy Rooms",
    "upgrade_prophecy_rooms_desc": "A secluded series of rooms the Priests and Priestesses can retire to while maintaining communication with the Gods.",
    "upgrade_temple_precinct": "Temple Precinct",
    "upgrade_temple_precinct_desc": "An area surrounding the [FromFrom.GetWonderTypeShortCap] has been dedicated to the [FromFrom.GetWonderTypeShortCap], and contains smaller buildings and open spaces specifically designed to invite a larger number of worshipers.",
    "upgrade_inner_sanctuary": "Inner Sanctuary",
    "upgrade_minaret": "Minaret",
    "upgrade_minaret_desc": "A tower attached to the [FromFrom.GetWonderTypeShortCap], to announce the call to prayer.",
    "upgrade_open_courtyard": "Sahn",
    "upgrade_open_courtyard_desc": "An open courtyard with a fountain, for performing ablutions and refreshing the faithful.",
    "upgrade_dome": "Qubba",
    "upgrade_dome_desc": "A symbolic representation of the vault of Heaven, the dome surmounts the Qibla wall.",
    "upgrade_lamps_hanging": "Magnificent Hanging Lamps",
    "upgrade_lamps_hanging_desc": "Illumination is essential in a [FromFrom.GetWonderTypeShortCap], as many prayers happen during the night. Hundreds of decorated lamps create a dazzling effect, with a soft light emanating from each one.",
    "upgrade_soup_kitchen": "Soup Kitchen",
    "upgrade_soup_kitchen_desc": "Not only for prayer, the [FromFrom.GetWonderTypeShortCap] is a civic center, caring for those in need.",
    "upgrade_school_mosque": "School",
    "upgrade_school_mosque_desc": "The [FromFrom.GetWonderTypeShortCap] is also a place of learning.",
    "upgrade_hostel": "Caravanserai",
    "upgrade_hostel_desc": "A hostel, instilling gratitude in many a tired traveler.",
    "upgrade_tallest_building": "Tallest Building",
    "upgrade_tallest_building_desc": "The Talmud instructs that the Synagogue should be taller than the other buildings.",
    "upgrade_garden_outer": "Outer Wall and Open Garden",
    "upgrade_garden_outer_desc": "By building an outer garden, the faithful can relax before and after the prayers.",
    "upgrade_holy_ark": "Holy Ark",
    "upgrade_holy_ark_desc": "The Torah Ark, where the sacred Torah scrolls are stored, are here given the proper importance.",
    "upgrade_decorations": "Elaborate Decorations",
    "upgrade_decorations_desc": "Elaborate decorations will help elevate the spirit of the faithful to the heavens.",
    "upgrade_choir_rooms": "Choir Rooms",
    "upgrade_choir_rooms_desc": "The acoustics of these rooms make them suited for practice singing.",
    "upgrade_school_synagogue": "School",
    "upgrade_school_synagogue_desc": "The [FromFrom.GetWonderTypeShortCap] is also a place of learning.",
    "upgrade_great_seminars": "Great Seminars",
    "upgrade_library": "Grand Library",
    "upgrade_library_desc": "An extensive library, for housing relevant manuscripts while also providing a quiet study area for the scholar in need of it.",
    "upgrade_wing_of_diplomacy": "Wing of Diplomacy",
    "upgrade_wing_of_martial": "Wing of Strategy",
    "upgrade_wing_of_stewardship": "Wing of Finance",
    "upgrade_wing_of_intrigue": "Wing of Secrets",
    "upgrade_wing_of_learning": "Wing of Theology",
    "no_other_plating_tt": "Has no plating",
    "upgrade_plating_gold": "Gold Plating",
    "upgrade_plating_gold_desc": "The sun reflects most brilliantly in the surface of this statue.",
    "upgrade_plating_silver": "Silver Plating",
    "upgrade_plating_silver_desc": "The moon reflects beautifully in the surface of this statue.",
    "upgrade_plating_bronze": "Bronze Plating",
    "upgrade_plating_bronze_desc": "This statue is shiny.",
    "upgrade_statues_family": "Additional Statues",
    "upgrade_statues_family_desc": "These beautiful statues are said to resemble the immediate family of [Root.GetTitledName].",
    "upgrade_stable": "Grand Stable",
    "upgrade_stable_desc": "A stable containing horses, but most importantly, the ones descending from the original chosen creature depicted in the grand monument rising above the roof of this building.",
    "upgrade_statues_animals": "Additional Animal Statues",
    "upgrade_statues_animals_desc": "The original statue is surrounded by smaller statues, depicting critters of various kinds.",
    "upgrade_cothon": "Cothon",
    "upgrade_cothon_desc": "An inner harbor.",
    "upgrade_piers": "Piers",
    "upgrade_piers_desc": "The piers expand the harbor and how much trade that can be conducted there.",
    "upgrade_office_harbor": "Harbor Office",
    "upgrade_office_harbor_desc": "The installation of a proper Harbor office has led to better control of the trade coming and going through the [FromFrom.GetWonderTypeShortCap].",
    "upgrade_lighthouse": "Lighthouse",
    "upgrade_lighthouse_desc": "For guiding ships in and out of the harbor.",
    "upgrade_military_wharf": "Military Wharf",
    "upgrade_military_wharf_desc": "An area set aside for construction of the navy.",
    "upgrade_statues_dead": "Statues of the Dead",
    "upgrade_statues_dead_desc": "The long-gone relatives of [Root.GetTitledFirstName] can be found standing witness to the passing of time, in the dark corridors of the [FromFrom.GetWonderTypeShortCap].",
    "upgrade_naval_spectacle": "Naval Spectacle",
    "upgrade_naval_spectacle_desc": "A massive undertaking allowing the stage to be filled with water for mock naval battles.",
    "upgrade_animal_cages": "Animal Cages",
    "upgrade_animal_cages_desc": "Allows for battles with exotic beasts, imported from distant lands.",
    "upgrade_hippodrome": "Hippodrome",
    "upgrade_hippodrome_desc": "An attachment to the Amphitheater, for races.",
    "upgrade_training_academy": "Training Academy",
    "upgrade_training_academy_desc": "An academy to train the fighters who fight in the amphitheater",
    "upgrade_chariot_race_course": "Chariot Race Course",
    "upgrade_chariot_race_course_desc": "A place for chariots to practice and race each other.",
    "upgrade_theater_stage": "Theater Stage",
    "upgrade_theater_stage_desc": "A stage, specifically designed for dramatic readings of poetry and acting.",
    "upgrade_fountains": "Fountains",
    "upgrade_fountains_desc": "Beautiful fountains, attracting small birds, adding to the atmosphere.",
    "upgrade_fountain_of_youth": "Fountain of Youth",
    "upgrade_fountain_of_youth_desc": "There is an eerie sheen to the water in this well...",
    "upgrade_hanging_gardens": "Hanging Gardens",
    "upgrade_hanging_gardens_desc": "A marvelous terraced solution to one section of the garden.",
    "upgrade_secluded_groves": "Secluded Groves",
    "upgrade_secluded_groves_desc": "A place for hiding. Or romance.",
    "upgrade_hidden_burial": "Hidden Burial Spot",
    "upgrade_hidden_burial_desc": "The sweet smell of flowers and thick undergrowth can hide the darkest of secrets...",
    "upgrade_poisonous_flowers": "Poisonous Flowers",
    "upgrade_poisonous_flowers_desc": "Delightful, but deadly, the flowers in this garden carry some powerful properties.",
    "upgrade_herb_garden": "Herb Garden",
    "upgrade_herb_garden_desc": "A well-organized patch of land, showing the dedication of its carer.",
    "upgrade_statues_garden": "Garden Statues",
    "upgrade_statues_garden_desc": "These elegant statues depict people relaxing, presumably to inspire calm in anyone visiting the garden.",
    "upgrade_estates_choice": "Choice Estates",
    "upgrade_estates_choice_desc": "The crown has begun to reserve choice areas and the finest forests in the land for royal hunting trips. Though some grumble, this is widely seen to be simply the monarch's due.",
    "upgrade_estates_expansive": "Expansive Estates",
    "upgrade_estates_expansive_desc": "More than mere hunting preserves, these lands are the private playground of the monarch, and include valuable economic areas.",
    "upgrade_estates_vast": "Vast Estates",
    "upgrade_estates_vast_desc": "Entire towns are subsumed by this kingdom-within-a-kingdom, and prosperous villages often find that the monarch's men have \"discovered\" maps placing their settlements firmly inside the nearest royal forest.",
    "upgrade_estate_fourth": "Fourth Estate",
    "upgrade_estate_fourth_desc": "The royal forests now cover over a third of the country, more than the lords, burghers, or clergy individually, and more than the rest of the monarchs' domains in their entirety. It is truly the fourth estate of the realm.",
    "upgrade_hunting_grounds": "Cleared Hunting Grounds",
    "upgrade_hunting_grounds_desc": "Like the new forest, a huge area is designated a kingswood and cleared of the local peasantry.",
    "upgrade_forest_laws": "Codified Forest Laws",
    "upgrade_forest_laws_desc": "A separate legal system for the royal forests that, where necessary, supersedes the common law of the land.",
    "upgrade_verderer_courts": "Verderer Courts",
    "upgrade_verderer_courts_desc": "Law is only as good as the system that backs it up, and now the royal forests have an entire system of courts, wardens, and clerks, backed up by trained magistrates, all ready to enforce the diktats of the crown.",
    "upgrade_freeminer_charters": "Freeminer Charters",
    "upgrade_freeminer_charters_desc": "Residents of the royal forest have the rights to local mineral deposits, in exchange for their services in war-time.",
    "upgrade_crown_industries": "Crown Industries",
    "upgrade_crown_industries_desc": "Royal metalworks, royal armories, royal shipwrights, royal carpentries. If it's skilled and in the kingwoods, it belongs to the crown.",
    "upgrade_timber_reserves": "Ancient Timber Reserves",
    "upgrade_timber_reserves_desc": "Reserve and cultivate ship-building timber for sale to your merchants, with the proviso that ships owe a certain amount of service to their lord.",
    "upgrade_regarder_offices": "Regarder Offices",
    "upgrade_regarder_offices_desc": "Establish a ministry that regularly beats the bounds of the royal forests, determining exactly where the edges lay, and pushing them outwards every now and then.",
    "upgrade_serjeant_outposts": "Serjeant Outposts",
    "upgrade_serjeant_outposts_desc": "Legalize small freeholders to patrol the borders of the kingwoods, in exchange for plots of land from which they can do it.",
    "upgrade_collection_stations": "Agistry Collection Stations",
    "upgrade_collection_stations_desc": "Agisters regulate both agistment and pannage, two of the major money-making abrogations for a royal forest. The organizations is not entirely unlike an extra layer of tax stations.",
    "upgrade_locals_disgruntled": "Disgruntled Locals",
    "upgrade_locals_disgruntled_desc": "The expansion of crown privileges at the expense of the local populace causes a certain amount of petty discontent with the crown, leading to mild negative events violating forest law.",
    "upgrade_locals_angry": "Angry Locals",
    "upgrade_locals_angry_desc": "Reckless expansion of crown privileges continues to infuriate the people who actually live on the land, giving more severe negative events.",
    "upgrade_locals_treasonous": "Treasonous Locals",
    "upgrade_locals_treasonous_desc": "With the most recent advance of the royal forest, the crown's powers are unprecedented. Peasants, clergy, and barons alike all chafe sorely against the start of the perceived-birth of an absolutist monarchy, and a dramatic revolt is sure to follow.",
    "upgrade_magna_carta": "Magna Carta",
    "upgrade_magna_carta_desc": "The dramatic revolts of the past are surely over with the signing of this Great Charter.",
    "upgrade_armory": "Armory",
    "upgrade_armory_desc": "An expansion to the [FromFrom.GetWonderTypeShortCap], providing ample storage for armor and weaponry.",
    "upgrade_watch_tower": "Watch Tower",
    "upgrade_watch_tower_desc": "A tower increasing the line of sight, and safety, for the entire province.",
    "upgrade_vault": "Vault",
    "upgrade_vault_desc": "A special vault, deep in the heart of the fortress, for storage and safe-keeping.",
    "upgrade_moat_pit": "Pit Moat",
    "upgrade_moat_pit_desc": "A deep trench surrounds this fortress.",
    "upgrade_moat_spike": "Spike Moat",
    "upgrade_moat_spike_desc": "At least one craftsman died in the making of this moat.",
    "upgrade_moat_water": "Water Moat",
    "upgrade_moat_water_desc": "Water keeps people at bay. Unless they can swim.",
    "upgrade_moat_bones": "Moat of Bones",
    "upgrade_moat_bones_desc": "A frightening sight, the moat is said to contain all that remains of those who have personally slighted [Root.GetTitledFirstName].",
    "upgrade_hidden_passageways": "Hidden Passageways",
    "upgrade_hidden_passageways_desc": "A labyrinthine network of tunnels and passageways are said to exist within and under the walls of [FromFrom.GetName].",
    "upgrade_garden_inner": "Inner Garden",
    "upgrade_garden_inner_desc": "Within the walls of the fortress is a small and tranquil garden, serving as a place for the world-weary warrior to recharge his energy.",
    "upgrade_dueling_room": "Dueling Room",
    "upgrade_dueling_room_desc": "A room dedicated to the practice of one-on-one combat.",
    "upgrade_treasure_chamber": "Treasure Chamber",
    "upgrade_treasure_chamber_desc": "A secret vault, for storing particularly valuable merchandise.",
    "upgrade_extra_supports": "Extra Support",
    "upgrade_extra_supports_desc": "A reinforced building structure, designed to prevent damage from earthquakes.",
    "upgrade_giant_banners": "Giant Banners",
    "upgrade_giant_banners_desc": "There can be no doubt as to who is the owner of this building.",
    "upgrade_improved_signal_fire": "Improved Signal Fire",
    "upgrade_improved_signal_fire_desc": "A marvel of engineering, this flame is bigger and lasts longer than others.",
    "upgrade_lighthouse_custodian": "Custodian of the Lighthouse",
    "upgrade_lighthouse_custodian_desc": "There is one person who is ultimately in charge of the lighthouse maintenance. At least on paper.",
    "upgrade_royal_apartments": "Royal Apartments",
    "upgrade_royal_apartments_desc": "In case of an important guest, the Royal Apartments will provide the level of comfort expected by any sophisticated ruler.",
    "upgrade_dungeon": "Dungeon",
    "upgrade_dungeon_desc": "It's a dungeon, but bigger.",
    "upgrade_caves_natural": "Natural Caves",
    "upgrade_caves_natural_desc": "A series of impressive natural hollows, these rooms are only partially improved upon by human engineering.",
    "upgrade_tunnels_travel": "Travel Tunnels",
    "upgrade_tunnels_travel_desc": "These tunnels are hard to navigate, but those with the necessary maps are high-ranking soldiers in need of expedient travel.",
    "upgrade_metal_mine_precious": "Precious Metal Mines",
    "upgrade_metal_mine_precious_desc": "In the depths of the underground complex, workers have encountered valuable ore, which is now being carefully excavated.",
    "upgrade_throne_fancy": "Fancy Throne Room",
    "upgrade_throne_fancy_desc": "A magnificent throne, much grander than any simple metal chair.",
    "upgrade_trap_door": "Trap Door",
    "upgrade_trap_door_desc": "A wooden floor hatch, conveniently located right in front of the royal throne, sends a message to any belligerent visitor.",
    "upgrade_runestones": "Rune Stones",
    "upgrade_runestones_desc": "In memory of beloved family members, the stones show intricate patterns and markings, inspiring deep respect for its craftsmen.",
    "upgrade_collection_drama": "Poetry and Drama Collection",
    "upgrade_collection_drama_desc": "These works reveal the human soul, the meaning of love, and the tragedy of life.",
    "upgrade_collection_architecture": "Architecture Collection",
    "upgrade_collection_architecture_desc": "The secrets of building great edifices, roads, and bridges are revealed in the classical works of Vitruvius and other recent authors.",
    "upgrade_collection_history": "History Collection",
    "upgrade_collection_history_desc": "Manuscripts recording the known history of modern civilization and warfare.",
    "upgrade_collection_science": "Natural Sciences Collection",
    "upgrade_collection_science_desc": "By reading what many others observed of the world and creatures that live in it we may gain precious knowledge. Is the world actually flat?",
    "upgrade_collection_math": "Math and Philosophy Collection",
    "upgrade_collection_math_desc": "From the works of Plato, to the most recent treatises on mathematics.",
    "upgrade_scribe_room": "Scribe Room",
    "upgrade_scribe_room_desc": "A room full of scribes, who receive works from all over the world and make copies of them.",
    "upgrade_extra_pyramids": "Extra Pyramids",
    "upgrade_extra_pyramids_desc": "Outside of the main [FromFrom.GetWonderTypeShortCap] two smaller, yet similar, monuments can be found. They are said to be resting place of the ones most dear to [Root.GetTitledFirstName].",
    "upgrade_mythological_beast": "[Root.GetMythologicalBeast]",
    "upgrade_mythological_beast_desc": "Perhaps a monument to [Root.GetTitledName] [Root.GetHerselfHimself], the statue is mostly reminiscent of a famous beast.",
    "upgrade_hidden_room": "Hidden Room",
    "upgrade_hidden_room_desc": "These rooms do not appear to be a part of the original plans for the [FromFrom.GetWonderTypeShortCap]...",
    "upgrade_necropolis": "Necropolis",
    "upgrade_necropolis_desc": "Within the [FromFrom.GetWonderTypeShortCap], surrounded by silence and the passing of time, there is a whole underground city for the dead.",
    "upgrade_traps": "Traps",
    "upgrade_traps_desc": "Considering the pyramid is a lot like a giant sign proclaiming where to find valuables, [Root.GetTitledFirstName] is rumored to have designed a number of intricate traps to scare off grave-robbers.",
    "upgrade_lime_stone_casing": "Lime Stone Casing",
    "upgrade_lime_stone_casing_desc": "The surface of this pyramid is exceptionally smooth, and when it reflects the sun, it sometimes looks like it is emitting a light of its own.",
    "upgrade_vestibule": "Vestibule",
    "upgrade_holy_place": "Holy Place",
    "upgrade_holy_of_holies": "Holy of Holies",
    "upgrade_cherubim": "Cherubim",
    "upgrade_cherubim_desc": "Two gigantic Cherubim made out of cedar wood, their outstretched wings touching in the middle of the Holy Place.",
    "upgrade_great_court": "Great Court",
    "upgrade_great_court_desc": "The outer court is used by the population for worship",
    "upgrade_inner_court": "Inner Court",
    "String_location_wondertype": "[target_province.GetName] [This.GetWonderTypeShortCap]",
    "String_location_adj_wondertype": "[target_province.GetName] [This.GetWonderAdjCap] [This.GetWonderTypeShortCap]",
    "String_adj_wondertype_of_location": "[This.GetWonderAdjCap] [This.GetWonderTypeShortCap] of [target_province.GetName]",
    "String_adj_wondertype_of_noun": "[This.GetWonderAdjCap] [This.GetWonderTypeShortCap] of [This.GetWonderFluffNounCap]",
    "String_Grand": "Grand",
    "String_Great": "Great",
    "String_Holy": "Holy",
    "String_Magnificent": "Magnificent",
    "String_Glorious": "Glorious",
    "String_Bloody": "Bloody",
    "String_Fortified": "Fortified",
    "String_Royal": "Royal",
    "String_Grand_Royal": "Grand Royal",
    "String_Silent": "Silent",
    "String_Cool": "Cool",
    "String_Whispering": "Whispering",
    "String_Bent": "Bent",
    "String_Leaning": "Leaning",
    "String_Terrible": "Terrible",
    "String_Exalted": "Exalted",
    "String_Marvelous": "Marvelous",
    "String_grand": "grand",
    "String_great": "great",
    "String_holy": "holy",
    "String_magnificent": "magnificent",
    "String_glorious": "glorious",
    "String_bloody": "bloody",
    "String_fortified": "fortified",
    "String_royal": "royal",
    "String_grand_royal": "grand royal",
    "String_silent": "silent",
    "String_whispering": "whispering",
    "String_bent": "bent",
    "String_leaning": "leaning",
    "String_terrible": "terrible",
    "String_exalted": "exalted",
    "String_marvelous": "marvelous",
    "String_Shadows": "Shadows",
    "String_Light": "Light",
    "String_Secrets": "Secrets",
    "String_Heaven": "Heaven",
    "String_Wonder_Province": "[target_province.GetName]",
    "String_Cathedral": "Cathedral",
    "String_cathedral": "cathedral",
    "String_Mosque": "Mosque",
    "String_mosque": "mosque",
    "String_Synagogue": "Synagogue",
    "String_synagogue": "synagogue",
    "String_Temple": "Temple",
    "String_temple": "temple",
    "String_Statue": "Statue",
    "String_statue": "statue",
    "String_Fortress": "Fortress",
    "String_fortress": "fortress",
    "String_Underground_City": "Underground City",
    "String_underground_city": "underground city",
    "String_Walls": "Walls",
    "String_walls": "walls",
    "String_Harbor": "Harbor",
    "String_harbor": "harbor",
    "String_Amphitheater": "Amphitheater",
    "String_amphitheater": "amphitheater",
    "String_Palace": "Palace",
    "String_palace": "palace",
    "String_Garden": "Garden",
    "String_garden": "garden",
    "String_Forest": "Forest",
    "String_forest": "forest",
    "String_University": "University",
    "String_university": "university",
    "String_Mausoleum": "Mausoleum",
    "String_mausoleum": "mausoleum",
    "String_Pyramid": "Pyramid",
    "String_pyramid": "pyramid",
    "String_Monolith": "Monolith",
    "String_monolith": "monolith",
    "String_Stonehenge": "Stonehenge",
    "String_stonehenge": "stonehenge",
    "String_months": "months",
    "String_years": "years",
    "String_decades": "decades",
    "String_almost_a_century": "almost a century",
    "String_ages": "ages",
    "String_more_than_a_hundred_years": "more than a hundred years",
    "String_hundreds_of_years": "hundreds of years",
    "String_as_long_as_anyone_can_remember": "as long as anyone can remember",
    "String_centuries": "centuries",
    "String_time_immemorial": "time immemorial",
    "String_a_long_time": "a long time",
    "String_Wonder_Desc00": "[target_wonder.GetDesc]. The [upgrade_00.GetRandomUpgradeDesc].",
    "String_Wonder_Desc01": "[target_province.GetInOnWonderTerrainCap] the [target_province.GetWonderTerrain] of [target_province.GetName], the [target_wonder.GetWonderAdj] [target_wonder.GetWonderTypeShort] has, for [target_wonder.GetWonderAgeDesc], [target_wonder.GetWonderPurpose].",
    "String_Wonder_Desc02": "The [target_wonder.GetWonderAdj] [target_wonder.GetWonderTypeShort] has [target_wonder.GetWonderPurpose], for [target_wonder.GetWonderAgeDesc]. The [upgrade_00.GetRandomUpgradeDesc].",
    "String_Wonder_Desc03": "The [upgrade_00.GetRandomUpgradeDesc]. For [target_wonder.GetWonderAgeDesc], the [target_wonder.GetWonderTypeShort] has [target_wonder.GetWonderPurpose].",
    "String_inspired_pious": "inspired many pious men and women",
    "String_brought_people_together": "brought god-fearing people together",
    "String_inspired_students": "inspired scholars and hardworking students",
    "String_encouraged_learning": "encouraged higher learning",
    "String_eased_the_burden": "eased the burden of every day life for countless people",
    "String_improved_lives": "improved the lives of its residents",
    "String_encouraged_greatness_1": "encouraged greatness in both commoner and noble alike",
    "String_encouraged_greatness_2": "been a beacon of greatness",
    "String_upgrade_sends_chills": "[This.GetName] sends chills down the spine of even the bravest of souls",
    "String_upgrade_send_chills": "[This.GetName] send chills down the spine of even the bravest of souls",
    "String_upgrade_promises_safety": "[This.GetName] promises safety in times of need",
    "String_upgrade_promise_safety": "[This.GetName] are said to guarantee its safety, in times of need",
    "String_upgrade_is_a_work_of_art": "[This.GetName] is a work of art",
    "String_upgrade_are_beautifully_made": "[This.GetName] are beautifully crafted",
    "String_statues_keep_demons_away": "stone [This.GetName] are said to keep demons at bay",
    "String_dome_is_second_sky": "grand dome is a second sky for its worshipers",
    "wonder_name_text_update": "[GetWonderName]",
    "wonder_desc_text_update": "[GetWonderDesc]",
    "string_In": "In",
    "string_On": "On",
    "SET_DYNASTY_NAME_EFFECT": "The $OLD_NAME|Y$ dynasty is renamed to $NEW_NAME|Y$",
    "EVT_TITLE_LT_60001": "A Town is Born",
    "EVTDESC_LT_60001": "The [target_wonder.GetName] has become a center for travelers and commerce, and some people have decided to settle close to the [target_wonder.GetWonderAdj] construction. The latest reports mention children, dogs, and cattle \u0097 they are obviously putting down deep roots.",
    "EVTOPTA_LT_60001": "They are welcome to stay in [target_province.GetName]!",
    "EVTOPTB_LT_60001": "Drive out the rabble and confiscate their possessions!",
    "EVT_TITLE_LT_60101": "[target_wonder.GetName]",
    "EVTDESC_LT_60101": "My scribes have been frequenting the [target_wonder.GetName] during their toil to finish my book. As they present me with a new extract it is clear that it has been a great help \u0096 the quality of the text is beyond reproach!",
    "EVTOPTA_LT_60101": "My scribes will shine with this [target_wonder.GetWonderAdj] construction's help!",
    "EVTOPTA_TT_LT_60101": "You encourage your scribes to use the [target_wonder.GetName], guaranteeing a better quality of work",
    "drink_from_fountain_of_youth": "Drink from the Fountain of Youth",
    "drink_from_fountain_of_youth_desc": "The life-giving waters of the fountain is said to be able to wash away the effects of aging in anyone who drinks it.",
    "has_not_chugged_in_10_years_TT": "Drank too recently \u0097 cannot drink it again until \u00a7Y[Root.drank_from_fountain_cooldown.GetExpiryDate]\u00a7!",
    "fountain_of_youth_custom_modifier_tt": "Unlocks the \u00a7YDrink from the Fountain of Youth\u00a7! decision",
    "EVT_TITLE_LT_60201": "Fountain of Youth",
    "EVTDESC_LT_60201_2": "I jump into the [target_wonder.GetName], laughing with glee, and I am soon choking on the life-giving water as I swallow mouthful after mouthful. As I drag myself up onto the ledge with shaking arms I soon stop smiling...",
    "EVTOPTA_LT_60201": "The years fall off me as I drink.",
    "EVTOPTB_LT_60201": "I've never felt this old before!",
    "title_lighthouse_custodian": "Lighthouse Custodian",
    "title_lighthouse_custodian_desc": "This honorific is awarded to a person who has shown themselves responsible and can be entrusted with the care of your lighthouse \u0096 keeping it both lit and functioning.",
    "lighthouse_custodian_custom_modifier_tt": "Unlocks the \u00a7YLighthouse Custodian\u00a7! minor title",
    "upgrade_stone_custodian": "Custodian of the Stone",
    "upgrade_stone_custodian_desc": "Steady as a rock, and with immovable discipline, the custodian is responsible for the care of the stones.",
    "stone_custodian_custom_modifier_tt": "Unlocks the \u00a7YCustodian of the Stone\u00a7! minor title",
    "title_stone_custodian": "Custodian of the Stone",
    "title_stone_custodian_desc": "This honorific is awarded to a person who has shown themselves steadfast in their loyalty and discipline.",
    "upgrade_more_stones": "More Stones",
    "upgrade_more_stones_desc": "The colossal monoliths of this construction already inspire both awe and admiration \u0096 imagine the impact of even more stones!",
    "upgrade_golden_crown": "Golden Crown",
    "upgrade_golden_crown_desc": "A crown made of pure gold encircles the magnificent head of the statue.",
    "upgrade_road_tolls": "Road Tolls",
    "upgrade_road_tolls_desc": "Anyone seeking passage through this area will be sternly encouraged to donate a small sum to the crown.",
    "upgrade_horse_graveyard": "Horse Graveyard",
    "upgrade_horse_graveyard_desc": "A dedicated place for your beloved horses to rest forever more.",
    "upgrade_pet_graveyard": "Pet Graveyard",
    "upgrade_pet_graveyard_desc": "A quiet and serene place for all pets to find eternal rest.",
    "OFFMAP_MAP_MODE_DESC_DELAYED": "Blue indicates realms that are within diplomatic range of the \u00a7Y[offmap_china.GetName]\u00a7!.\\nGreen indicates realms that have a peace treaty with the \u00a7Y[offmap_china.GetName]\u00a7!.\\nPurple indicates realms that are paying tribute to the \u00a7Y[offmap_china.GetName]\u00a7!.\\nRed indicates the realm of the \u00a7Y[offmap_china.Governor.GetTitle]\u00a7!.",
    "WONDER_NAME_TEMPLATE": "$TYPE_NAME$ of [FromFromFrom.GetName]",
    "WONDER_UPGRADE_NAME_TEMPLATE": "[From.GetTypeName] of [FromFromFrom.GetName]",
    "WONDER_BEING_BUILT": "\u00a7Y[This.GetName]\u00a7! is being built",
    "WONDER_NOT_BEING_BUILT": "\u00a7Y[This.GetName]\u00a7! is not being built",
    "WONDER_SPECIFIC_BEING_BUILT_IN_PROVINCE": "\u00a7Y$WONDER_TYPE$\u00a7! is being built in \u00a7Y[This.GetName]\u00a7!",
    "WONDER_SPECIFIC_BEING_BUILT_BY_CHARACTER": "\u00a7Y$WONDER_TYPE$\u00a7! is being built by \u00a7Y[This.GetFirstName]\u00a7!",
    "WONDER_SPECIFIC_BEING_BUILT": "\u00a7Y[This.GetName]\u00a7! is being built and is of type \u00a7Y$WONDER_TYPE$\u00a7!",
    "WONDER_SPECIFIC_NOT_BEING_BUILT_IN_PROVINCE": "\u00a7Y$WONDER_TYPE$\u00a7! is not being built in \u00a7Y[This.GetName]\u00a7!",
    "WONDER_SPECIFIC_NOT_BEING_BUILT_BY_CHARACTER": "\u00a7Y$WONDER_TYPE$\u00a7! is not being built by \u00a7Y[This.GetFirstName]\u00a7!",
    "WONDER_SPECIFIC_NOT_BEING_BUILT": "\u00a7Y[This.GetName]\u00a7! is not being built or is not of type \u00a7Y$WONDER_TYPE$\u00a7!",
    "WONDER_UPGRADE_BEING_BUILT": "A feature is being built for \u00a7Y[This.GetName]\u00a7!",
    "WONDER_UPGRADE_NOT_BEING_BUILT": "A feature is not being built for \u00a7Y[This.GetName]\u00a7!",
    "WONDER_SPECIFIC_UPGRADE_BEING_BUILT_IN_PROVINCE": "\u00a7Y$WONDER_UPGRADE_TYPE$\u00a7! is being built in \u00a7Y[This.GetName]\u00a7!",
    "WONDER_SPECIFIC_UPGRADE_BEING_BUILT_BY_CHARACTER": "\u00a7Y$WONDER_UPGRADE_TYPE$\u00a7! is being built by \u00a7Y[This.GetFirstName]\u00a7!",
    "WONDER_SPECIFIC_UPGRADE_BEING_BUILT": "\u00a7Y$WONDER_UPGRADE_TYPE$\u00a7! is being built for \u00a7Y[This.GetName]\u00a7!",
    "WONDER_SPECIFIC_UPGRADE_NOT_BEING_BUILT_IN_PROVINCE": "\u00a7Y$WONDER_UPGRADE_TYPE$\u00a7! is not being built in \u00a7Y[This.GetName]\u00a7!",
    "WONDER_SPECIFIC_UPGRADE_NOT_BEING_BUILT_BY_CHARACTER": "\u00a7Y$WONDER_UPGRADE_TYPE$\u00a7! is not being built by \u00a7Y[This.GetFirstName]\u00a7!",
    "WONDER_SPECIFIC_UPGRADE_NOT_BEING_BUILT": "\u00a7Y$WONDER_UPGRADE_TYPE$\u00a7! is not being built for \u00a7Y[This.GetName]\u00a7!",
    "WONDER_BUILT": "\u00a7Y[This.GetName]\u00a7! has been built",
    "WONDER_NOT_BUILT": "\u00a7Y[This.GetName]\u00a7! has not been built",
    "WONDER_SPECIFIC_BUILT_IN_PROVINCE": "\u00a7Y$WONDER_TYPE$\u00a7! has been built in \u00a7Y[This.GetName]\u00a7!",
    "WONDER_SPECIFIC_BUILT_BY_CHARACTER": "\u00a7Y$WONDER_TYPE$\u00a7! has been built by \u00a7Y[This.GetFirstName]\u00a7!",
    "WONDER_SPECIFIC_BUILT": "\u00a7Y[This.GetName]\u00a7! has been built and is of type \u00a7Y$WONDER_TYPE$\u00a7!",
    "WONDER_SPECIFIC_NOT_BUILT_IN_PROVINCE": "\u00a7Y$WONDER_TYPE$\u00a7! has not been built in \u00a7Y[This.GetName]\u00a7!",
    "WONDER_SPECIFIC_NOT_BUILT_BY_CHARACTER": "\u00a7Y$WONDER_TYPE$\u00a7! has not been built by \u00a7Y[This.GetFirstName]\u00a7!",
    "WONDER_SPECIFIC_NOT_BUILT": "\u00a7Y[This.GetName]\u00a7! has not been built or is not of type \u00a7Y$WONDER_TYPE$\u00a7!",
    "WONDER_SPECIFIC_UPGRADE_BUILT_IN_PROVINCE": "\u00a7Y$WONDER_UPGRADE_TYPE$\u00a7! has been built in \u00a7Y[This.GetName]\u00a7!",
    "WONDER_SPECIFIC_UPGRADE_BUILT_BY_CHARACTER": "\u00a7Y$WONDER_UPGRADE_TYPE$\u00a7! has been built by \u00a7Y[This.GetFirstName]\u00a7!",
    "WONDER_SPECIFIC_UPGRADE_BUILT_FOR_WONDER": "\u00a7Y$WONDER_UPGRADE_TYPE$\u00a7! has been built for \u00a7Y[This.GetName]\u00a7!",
    "WONDER_SPECIFIC_UPGRADE_BUILT": "\u00a7Y$WONDER_UPGRADE_TYPE$\u00a7! has been built",
    "WONDER_SPECIFIC_UPGRADE_NOT_BUILT_IN_PROVINCE": "\u00a7Y$WONDER_UPGRADE_TYPE$\u00a7! has not been built in \u00a7Y[This.GetName]\u00a7!",
    "WONDER_SPECIFIC_UPGRADE_NOT_BUILT_BY_CHARACTER": "\u00a7Y$WONDER_UPGRADE_TYPE$\u00a7! has not been built by \u00a7Y[This.GetFirstName]\u00a7!",
    "WONDER_SPECIFIC_UPGRADE_NOT_BUILT_FOR_WONDER": "\u00a7Y$WONDER_UPGRADE_TYPE$\u00a7! has not been built for \u00a7Y[This.GetName]\u00a7!",
    "WONDER_SPECIFIC_UPGRADE_NOT_BUILT": "\u00a7Y$WONDER_UPGRADE_TYPE$\u00a7! has not been built",
    "WONDER_STAGE_TRIGGER": "Current stage is $COMPARISON$ $VALUE|Y$",
    "WONDER_AGE_TRIGGER": "\u00a7Y[This.GetName]\u00a7! is $COMPARISON$ $VALUE|Y$ years old",
    "WONDER_STAGE_AGE_TRIGGER": "The current stage is $COMPARISON$ $VALUE|Y$ years old",
    "HAS_NOT_WONDER_FLAG": "Does NOT have the $FLAG|Y$ flag",
    "HAS_WONDER_FLAG": "Does have the $FLAG|Y$ flag",
    "HAS_NOT_WONDER_UPGRADE_FLAG": "Does NOT have the $FLAG|Y$ flag",
    "HAS_WONDER_UPGRADE_FLAG": "Does have the $FLAG|Y$ flag",
    "WONDER_EFFECT_ADD_SPECIFIC_UPGRADE": "Add $WONDER_UPGRADE_TYPE|Y$ feature",
    "WONDER_EFFECT_FINISH_UPGRADE": "Finish \u00a7Y[This.GetName]\u00a7!",
    "WONDER_EFFECT_COMPLETE_STAGE": "Complete stage $NUM|Y$",
    "WONDER_OWNER_CHANGE_LOG": "Ownership of $WONDER_NAME|Y$ was transferred from $OLD_OWNER|Y$ to $NEW_OWNER|Y$",
    "WONDER_STAGE_RESUME_TT": "Resume stage construction",
    "WONDER_STAGE_RESUME_TT_DELAYED_DISABLED": "\u00a7RYou can not resume construction if you are bankrupt\u00a7!",
    "WONDER_STAGE_PAUSE_TT": "Pause stage construction",
    "WONDER_STAGE_PAUSE_TT_DELAYED": "While stage construction is paused there is no stage construction upkeep.",
    "WONDER_STAGE_ABORT_TT": "Abort stage construction",
    "WONDER_OWNER_MODIFIER_TT": "\u00a7Y[Root.GetBestName]\u00a7!:\\n$MODIFIER_DESCRIPTION$\\n",
    "WONDER_LOCAL_MODIFIER_TT": "\u00a7Y[FromFromFrom.GetName]\u00a7!:\\n$MODIFIER_DESCRIPTION$\\n",
    "WONDER_STAGE_MODIFIER_TT": "$OWNER_MODIFIER_TEXT$$LOCAL_MODIFIER_TEXT$",
    "WONDER_STAGE_NEXT_TT": "Next stage ($NUM|Y$)",
    "WONDER_STAGE_NEXT_TT_DELAYED": "$MODIFIER_TEXT$$ALLOW_TRIGGER_TEXT$",
    "WONDER_STAGE_NEXT_BUILD_TT": "Build next stage ($NUM|Y$)",
    "WONDER_STAGE_NEXT_BUILD_TT_DELAYED": "$MODIFIER_TEXT$$ALLOW_TRIGGER_TEXT$",
    "WONDER_STAGE_CURRENT_TT": "Current stage ($NUM|Y$)",
    "WONDER_STAGE_CURRENT_TT_DELAYED": "$MODIFIER_TEXT$$ALLOW_TRIGGER_TEXT$",
    "WONDER_STAGE_NUMBERED_TT": "Stage $NUM|Y$",
    "WONDER_STAGE_PROGRESS_TT": "Stage \u00a7Y[FromFrom.GetNextStageNumber]\u00a7! is \u00a7Y$NUM$%\u00a7! done",
    "WONDER_UPGRADE_RESUME_DISABLED_TT_DELAYED": "\u00a7RYou can not resume construction if you are bankrupt\u00a7!",
    "WONDER_UPGRADE_AVAILABLE_NAME_TT": "$NAME$",
    "WONDER_UPGRADE_OWNED_NAME_TT": "[From.GetName]",
    "WONDER_UPGRADE_OWNED_NAME_COMPLETE_TT_DELAYED": "[From.GetDesc]",
    "WONDER_UPGRADE_OWNED_NAME_IN_PROGRESS_TT_DELAYED": "[From.GetDesc]\\n[From.GetActiveTriggerDescription]",
    "WONDER_UPGRADE_TICKING_COST_TT_DELAYED": "Construction cost will be $TICKING_COST|R$\u00a4per month for $TIME_TO_BUILD|Y$ reaching an estimated total cost of $ESTIMATED_TOTAL|R$\u00a4.",
    "WONDER_UPGRADE_TIME_COST_OWNED_TT": "Time left until completion",
    "WONDER_UPGRADE_TIME_COST_OWNED_TT_DELAYED": "Estimated to be completed on \u00a7Y[From.GetEstimatedFinishDate]\u00a7!",
    "WONDER_UPGRADE_FLAT_COST_TT": "Up front cost",
    "WONDER_UPGRADE_IN_PROGRESS_TT": "\u00a7Y[From.GetPercentComplete]\u00a7!% complete",
    "WONDER_UPGRADE_IN_PROGRESS_TT_DELAYED": "Estimated to be completed on \u00a7Y[From.GetEstimatedFinishDate]\u00a7!",
    "WONDER_UPGRADE_COMPLETED_TT": "Completed on \u00a7Y[From.GetCompletionDate]\u00a7!",
    "WONDER_UPGRADE_COMPLETED_TT_DELAYED": "Completed by \u00a7Y[From.Completer.GetBestName]\u00a7!",
    "IN_PROGRESS_NO_CAP": "in progress",
    "COMPLETED_NO_CAP": "completed",
    "ARTIFACT_UNICORN_TT": "Is a Horse",
    "LEDGER_UPGRADES": "Features",
    "LEDGER_ENTRY_WONDER_TOOLTIP": "$WONDER$",
    "LEDGER_TIER": "Stage",
    "LEDGER_HEADER_WONDER": "Wonders of the World",
    "PROPAGATE_BLOODLINE_FROM_EFFECT": "$MEMBER$ and their offspring are now considered part of the $BLOODLINE$",
    "HOLY_ORDER_EXPELLED_TOOLTIP": "$TITLE|Y$ refuses to raise their troops under your command due to previously being expelled from your realm.",
    "OUTLINER_NEXT_WONDER_STAGE": "Currently constructing the next stage of the $WONDER$",
    "panda_group": "Ailuridae",
    "red_panda": "Red Panda",
    "MODIFIERS_PLAIN": "Modifiers",
    "CONFIRM_ABORT_WONDER_CONSTRUCTION_TITLE": "Abort construction?",
    "COMPLETED_CAP": "Completed",
    "AVAILABLE_CAP": "Available",
    "RESUME": "Resume",
    "WONDER_CONFIRM_START_CONSTRUCTION_DESCRIPTION": "Do you want to build a new $WONDER_TYPE_NAME$?",
    "VALUE_PER_MONTH": "$VALUE$ / month",
    "YEARS_COUNT": "$YEAR$ years",
    "YEAR_COUNT": "$YEAR$ year",
    "MONTHS_COUNT": "$MONTH$ months",
    "MONTH_COUNT": "$MONTH$ month",
    "EVENT_CANCEL_DISALLOWED": "Cancel is not allowed for this event",
    "COMPLETED": "Completed",
    "IN_PROGRESS_CAP": "In Progress",
    "RENAME_WONDER_BUTTON": "\u00a7YRename [FromFrom.GetName]\u00a7!",
    "RENAME_WONDER_MESSAGE_LOG": "Rename [FromFrom.GetName]",
    "WONDER_NAME": "\u00a7Y[FromFrom.GetName]\u00a7!",
    "UNKNOWN_OWNER": "Unknown owner",
    "CHARACTER_TOOK_OWNERSHIP": "\u00a7G$CHARACTER_NAME$\u00a7! took over as owner",
    "WONDER_HISTORY_STAGE_CONSTRUCTION_STARTED": "Construction of stage $STAGE_NUMBER$ started",
    "WONDER_HISTORY_STAGE_CONSTRUCTION_FINISHED": "Construction of stage $STAGE_NUMBER$ was completed",
    "WONDER_CONSTRUCTION_STARTED": "Construction of the next stage has started for \u00a7Y[This.GetName]\u00a7!",
    "WONDER_CONSTRUCTION_NOT_STARTED": "Construction of the next stage has not started for \u00a7Y[This.GetName]\u00a7!",
    "WONDER_SPECIFIC_CONSTRUCTION_STARTED_IN_PROVINCE": "Construction of a \u00a7Y$WONDER_TYPE$\u00a7! stage has been started in \u00a7Y[This.GetName]\u00a7!",
    "WONDER_SPECIFIC_CONSTRUCTION_STARTED_BY_CHARACTER": "\u00a7Y[This.GetFirstName]\u00a7! has started constructing a \u00a7Y$WONDER_TYPE$\u00a7! stage",
    "WONDER_SPECIFIC_CONSTRUCTION_STARTED": "Construction of \u00a7Y[This.GetName]\u00a7! has been started and is of type \u00a7Y$WONDER_TYPE$\u00a7!",
    "WONDER_SPECIFIC_CONSTRUCTION_NOT_STARTED_IN_PROVINCE": "Construction of a \u00a7Y$WONDER_TYPE$\u00a7! stage has not been started in \u00a7Y[This.GetName]\u00a7!",
    "WONDER_SPECIFIC_CONSTRUCTION_NOT_STARTED_BY_CHARACTER": "\u00a7Y[This.GetFirstName]\u00a7! has not started constructing a \u00a7Y$WONDER_TYPE$\u00a7! stage",
    "WONDER_SPECIFIC_CONSTRUCTION_NOT_STARTED": "Construction of \u00a7Y[This.GetName]\u00a7! has not been started or is not of type \u00a7Y$WONDER_TYPE$\u00a7!",
    "WONDER_UPGRADE_CONSTRUCTION_STARTED": "Construction of a feature has started for \u00a7Y[This.GetName]\u00a7!",
    "WONDER_SPECIFIC_UPGRADE_CONSTRUCTION_STARTED_IN_PROVINCE": "Construction of \u00a7Y$WONDER_UPGRADE_TYPE$\u00a7! has been started in \u00a7Y[This.GetName]\u00a7!",
    "WONDER_SPECIFIC_UPGRADE_CONSTRUCTION_STARTED": "Construction of \u00a7Y[This.GetName]\u00a7! has been started and is of type \u00a7Y$WONDER_UPGRADE_TYPE$\u00a7!",
    "WONDER_SPECIFIC_UPGRADE_CONSTRUCTION_NOT_STARTED_IN_PROVINCE": "Construction of \u00a7Y$WONDER_UPGRADE_TYPE$\u00a7! has not been started in \u00a7Y[This.GetName]\u00a7!",
    "WONDER_SPECIFIC_UPGRADE_CONSTRUCTION_NOT_STARTED": "Construction of \u00a7Y[This.GetName]\u00a7! has not been started or is not of type \u00a7Y$WONDER_UPGRADE_TYPE$\u00a7!",
    "obj_create_wonder_desc": "[This.GetTitledFirstName] wants to build a glorious building of great prestige!",
    "DEATH_EXECUTION_SPIKES": "was impaled on the spikes of a great building by $KILLER$",
    "DEATH_EXECUTION_SPIKES_NO_KILLER": "was impaled on the spikes of a great building",
    "DEATH_EXECUTION_MOAT_SPIKES": "was impaled on spikes, in the moat of a great fortress, by $KILLER$",
    "DEATH_EXECUTION_MOAT_SPIKES_NO_KILLER": "was impaled on spikes in the moat of a great fortress",
    "DEATH_EXECUTION_MOAT_PIT": "was starved to death, in the moat of $KILLER$",
    "DEATH_EXECUTION_MOAT_PIT_NO_KILLER": "was starved to death in a moat",
    "DEATH_EXECUTION_MOAT_WATER": "was drowned, in the moat of $KILLER$",
    "DEATH_EXECUTION_MOAT_WATER_NO_KILLER": "was drowned in a moat",
    "String_Golden": "Golden",
    "String_golden": "golden",
    "String_special_wonder_name": "[GetSpecialWonderName]",
    "String_citadel": "citadel",
    "String_Citadel": "Citadel",
    "String_iron": "iron",
    "String_Iron": "Iron",
    "String_towering": "towering",
    "String_Towering": "Towering",
    "String_the_evil_god_names_workshop": "[Root.Religion.GetRandomEvilGodNameCap]'s Workshop",
    "String_Statue_Ruler": "Statue of [wonder_owner_original.GetTitledFirstName]",
    "String_statue_ruler": "Statue of [wonder_owner_original.GetTitledFirstName]",
    "String_statue_wonder_type": "[This.GetWonderTypeShortCap]",
    "String_adj_statue_wonder_type": "[This.GetWonderTypeShortCap] in [target_province.GetName]",
    "String_adj_statue_wonder_type_in_location": "[This.GetWonderAdjCap] [This.GetWonderTypeShortCap] in [target_province.GetName]",
    "String_Death": "Death",
    "String_Pain": "Pain",
    "String_looming": "looming",
    "upgrade_royal_bedchamber": "Royal Bedchamber",
    "String_Screams": "Screams",
    "String_divine": "divine",
    "String_Divine": "Divine",
    "String_jewel_of_the_province": "The Jewel of [target_province.GetName]",
    "String_Romance": "Romance",
    "String_Treasures": "Treasures",
    "String_Verdant": "Verdant",
    "String_verdant": "verdant",
    "String_ancient": "ancient",
    "String_Ancient": "Ancient",
    "String_lighthouse": "lighthouse",
    "String_soaring": "soaring",
    "String_Soaring": "Soaring",
    "String_Hallowed": "Hallowed",
    "String_hallowed": "hallowed",
    "String_old": "old",
    "String_Old": "Old",
    "String_Colossus": "Colossus",
    "String_Stallion": "Stallion",
    "String_Mare": "Mare",
    "String_Keep": "Keep",
    "String_Castle": "Castle",
    "String_Shield": "Shield",
    "String_Woods": "Woods",
    "upgrade_torture_chamber": "Torture Chamber",
    "String_Looming": "Looming",
    "upgrade_skull_throne": "Throne of Skulls",
    "upgrade_torture_chamber_desc": "Best not to ask too many questions, lest you end up here.",
    "upgrade_skull_throne_desc": "A throne made of skulls and bones, supported by a frame of iron.",
    "upgrade_golden_throne": "Golden Throne",
    "upgrade_golden_throne_desc": "A throne made entirely of gold, not even gilded, just completely gold. What a waste.",
    "drunkard_opinion": "Drunkard Opinion",
    "upgrade_brewery": "Brewery",
    "upgrade_brewery_desc": "A brewery to create your own alcohol. While unlikely to turn a profit, it might make you popular.",
    "alcohol_gift_decision": "Give [GetAlcoholContainerType] of [GetAlcoholType] gift",
    "alcohol_gift_decision_desc": "Send [Root.GetTitledFirstName] a [GetAlcoholContainerType] of [GetAlcoholType] brewed in your own brewery",
    "not_recently_sent_alcohol_tooltip": "[From.GetTitledFirstName] has not recently sent a gift of alcohol.",
    "String_Bottle": "Bottle",
    "String_Case": "Case",
    "String_Cask": "Cask",
    "String_Barrel": "Barrel",
    "String_Beer": "Beer",
    "String_Ale": "Ale",
    "String_Wine": "Wine",
    "String_Cider": "Cider",
    "String_Mead": "Mead",
    "String_Whiskey": "Whiskey",
    "opinion_gifted_alcohol": "Was Given Brewery Gift",
    "opinion_gifted_alcohol_drunkard": "Was Given Brewery Gift",
    "upgrade_vineyard": "Vineyard",
    "upgrade_vineyard_desc": "A place to grow grapes and make them into wine.",
    "String_Vineyard": "Vineyard",
    "String_Brewery": "Brewery",
    "upgrade_royal_bedchamber_desc": "An incredibly ostentatious bedroom, fit for nobility.",
    "upgrade_historical_mural": "Historical Mural",
    "upgrade_historical_mural_desc": "A beautiful mural depicting a scene from the history of your dynasty.",
    "upgrade_eternal_flame": "Eternal Flame",
    "upgrade_eternal_flame_desc": "The Eternal Flame is constantly tended, to ensure it never goes out.",
    "upgrade_unmarked_tombs": "Unmarked Tombs",
    "upgrade_unmarked_tombs_desc": "It is unclear who these tombs were made for, but rumor has it you can sometimes hear voices from within.",
    "zunist_pagan_opinion": "Zunist Opinion",
    "zunist_pagan_reformed_opinion": "Reformed Zunist Opinion",
    "upgrade_quadriga_statue": "Quadriga Statue",
    "upgrade_quadriga_statue_desc": "This statue depicts four horses pulling a chariot.",
    "upgrade_chaitya-grihas": "Chaitya-Grihas",
    "upgrade_gompa": "Gompa",
    "upgrade_bodhi_tree": "Bodhi Tree",
    "upgrade_cave_complex": "Cave Complex",
    "upgrade_vihara": "Vihara",
    "upgrade_school_buddhist": "Buddhist School",
    "upgrade_relic_stupa": "Relic Stupa",
    "upgrade_object_stupa": "Object Stupa",
    "upgrade_commerative_stupa": "Commerative Stupa",
    "upgrade_symbolic_stupa": "Symbolic Stupa",
    "upgrade_votive_stupa": "Votive Stupa",
    "upgrade_chaitya-grihas_desc": "A prayer hall that surrounds the stupas.",
    "upgrade_gompa_desc": "A fortification surrounding the temple.",
    "upgrade_bodhi_tree_desc": "A descendant of the sacred tree in under which\u00a0Siddhartha Gautama, the spiritual teacher who became known as\u00a0the Buddha, attained enlightenment.",
    "EVTOPTA_LT_20610": "I hope my successor does not do the same mistake.",
    "holdings_walls_upgrade_custom_modifier_tt": "All walls of the province's holdings will be upgraded to their maximum level.",
    "better_chance_of_defender_siege_events_custom_modifier_tt": "Defenders will have more chances of actively resisting sieges.",
    "EVT_TITLE_LT_20700": "The [target_upgrade.GetName] are Done!",
    "EVTDESC_LT_20700": "The last fortifications of the [target_upgrade.GetName] for mine [target_wonder.GetName] have been finally finished. Now, even the small townships in the province of [target_province.GetName] are protected by these great defensive works!",
    "EVTOPTA_LT_20700": "I always enjoy more protection.",
    "EVTOPTA_LT_20700_TT": "All walls of [target_province.GetName] holdings are upgraded to their maximum level.",
    "EVTDESC_LT_20805": "Your courtier [target_courtier.GetBestName] comes to you and says [target_courtier.GetSheHe] acquired [looted_artifact.GetName] from looting the [target_wonder.GetWonderTypeShort]. [target_courtier.GetSheHeCap] would like to gift it to you.",
    "EVTOPTA_LT_20805": "Thank you, I accept this offer gladly.",
    "EVTOPTB_LT_20805": "I thank you, but you can keep it to yourself.",
    "EVTDESC_LT_20810": "As your men start to loot the [From.GetUnfinished][From.GetName], many in [FromFrom.GetName] are upset that you are destroying their heritage.",
    "EVTDESC_LT_20810_cheap": "As people see your men starting to tear down the [From.GetUnfinished] [From.GetName], they become upset. Something has to be done to avoid public unrest.",
    "EVTOPTA_LT_20810": "I post guards so that nobody interferes.",
    "EVTOPTB_LT_20810": "I open the [From.GetWonderTypeShort] for everybody to have a share of the profit.",
    "EVT_TITLE_LT_20820": "Great Work Looted",
    "EVTDESC_LT_20820_the_end": "The \u00a7Y[From.GetName]\u00a7! is now nothing but rubble, its former glory lost forever. And I got [global_loot.GetValue] gold from it.",
    "EVTDESC_LT_20820": "The looting of the \u00a7Y[From.GetName]\u00a7! gave me [global_loot.GetValue] gold. And there is still more to come!",
    "looted_wonder_artifact_bells_rename": "The Bells from the [target_wonder.GetName].",
    "looted_wonder_artifact_bells_desc": "These bells were taken during the looting of the [target_wonder.GetName].",
    "less_likely_to_be_looted_modifier_tt": "\u00a7YArtifacts\u00a7! are less likely to be stolen",
    "String_Great_Work": "Great Work",
    "String_castle": "castle",
    "String_keep": "keep",
    "String_stone_formation": "stone formation",
    "String_Lighthouse": "Lighthouse",
    "String_hot_spot_for_gossip": "been a hot spot for court intrigue and gossip",
    "String_house_of_envy": "been a house of envy and admiration",
    "String_safe_haven_for_lost_souls": "been a safe haven for lost souls",
    "String_a_place_of_comfort_for_believers": "been a place of comfort for all [Wonder.Owner.Religion.GetName] followers",
    "String_lent_its_protection": "lent protection to those in need",
    "String_shielded_its_people": "shielded its people from enemies",
    "String_been_impressive_curiosity": "been an impressive curiosity",
    "String_inspired_wonder": "inspired wonder in its visitors",
    "String_been_bringing_traffic": "been bringing traffic and tourism to the area",
    "String_been_aiding_maritime_matters": "been aiding maritime matters",
    "String_been_guiding_ships_to_port": "been guiding ships to port",
    "String_tourist_attraction": "been a successful tourist attraction",
    "String_center_of_leisure": "been the nobility's favorite place of leisure and rejuvenation",
    "String_source_of_veneration": "been a source of solemn veneration",
    "String_impressive_feat_of_architecture": "been an impressive feat of architecture",
    "String_inspired_imagination": "inspired the imagination of its visitors",
    "String_said_to_be_the_envy_of_gardeners": "[This.GetName] is said to be the envy of any educated gardener",
    "String_brings_comfort_to_pet_owners": "[This.GetName] brings comfort to bereaved pet owners from all layers of society",
    "String_lends_moral_support": "[This.GetName] lends moral support and a watching eye to the surrounding area",
    "String_keeps_people_on_their_toes": "[This.GetName] is rumored to keep people on their toes",
    "String_improves_accessibility": "[This.GetName] improve accessibility in the area",
    "String_contribute_to_heightened_security": "[This.GetName] contribute[This.GetSingularS] to a heightened security in the area",
    "String_bring_luxury_during_colder_seasons": "[This.GetName] bring[This.GetSingularS] an unparalleled feeling of luxury during cold seasons",
    "String_acts_as_entertainment": "[This.GetName] act[This.GetSingularS] as a source of rare entertainment in the area",
    "String_can_be_seen_from_far_away": "[This.GetName] can be seen from far away",
    "String_signals_expected_obedience": "[This.GetName] installed by the owner signal[This.GetSingularS] a certain expectation of obedience",
    "String_rumored_to_be_the_best": "[This.GetName] is rumored to be the best in the realm",
    "String_bring_in_cash": "[This.GetName] are bringing in extra finances from the area",
    "String_offers_relaxation": "[This.GetName] offer[This.GetSingularS] respite for weary travelers",
    "String_inspires_awe": "[This.GetName] inspire[This.GetSingularS] solemn awe",
    "ruins_of_wonder_name": "Ruins of [This.GetName]",
    "ruined_wonder_type": "Ruined [This.GetWonderTypeShortCap]",
    "destroyed_wonder_type": "Destroyed [This.GetWonderTypeShortCap]",
    "ruined_wonder_desc_1": "This construction has been severely damaged by pillaging, and would require labor to be restored.",
    "ruined_wonder_desc_2": "This construction has been almost completely destroyed, looted for anything of value, and is now but a shadow of its former glory.",
    "upgrade_tavern": "Tavern",
    "upgrade_tavern_desc": "Lively conversations, flowing drinks, and a warm fire \u0096 there is no better place to relax after a long day!",
    "tavern_custom_modifier_tt": "Might allow you to remove \u00a7YStressed\u00a7!",
    "EVT_TITLE_LT_60301": "Evening at the Tavern",
    "EVTDESC_LT_60301": "Warm light, accompanied by the lively murmur of conversation, spills out of the tavern close to the [target_wonder.GetName] as [drinking_buddy.GetTitledName] and I walk past.\\n\\n\"What do you say about a cup of something soothing?\"",
    "EVTOPTA_LT_60301": "Lead the way!",
    "EVTOPTA_LT_60301_TT": "There might be consequences to this",
    "EVTOPTB_LT_60301": "I am more interested in continuing our discussion.",
    "EVT_TITLE_LT_60302": "Another!",
    "EVTDESC_LT_60302": "After my initial visit to the tavern close to the [target_wonder.GetName] I have not been able to keep away. More often than not I find myself seeking the comfort of a big cup of [GetAlcoholType] after a long day.",
    "EVTOPTA_LT_60302": "Pour me another one!",
    "EVTDESC68031_RETINUE": "The retinue stationed in the [target_wonder.GetName] have helped me to round up and execute the robber bands that were plaguing \u00a7Y[Root.GetName]\u00a7!!",
    "EVTDESC68031_TEMPLE_GUARDS": "The temple guards of [target_wonder.GetName] have helped me to round up and execute the robber bands that were plaguing \u00a7Y[Root.GetName]\u00a7!!",
    "EVTDESC68031_FALLBACK": "Due to the [target_wonder.GetName], and my great Martial ability, the robber bands that were plaguing \u00a7Y[Root.GetName]\u00a7! have been rounded up and executed!",
    "EVTDESC68021_RETINUE": "Thanks to the retinue stationed in the [target_wonder.GetName], and my great diplomatic skill, the Smugglers' Ring in \u00a7Y[Root.GetName]\u00a7! has been destroyed. The head of the last smuggler is now rotting on a pike.",
    "EVTDESC68021_TEMPLE_GUARDS": "Thanks to the temple guards of [target_wonder.GetName], and my great diplomatic skill, the Smugglers' Ring in \u00a7Y[Root.GetName]\u00a7! has been destroyed. The head of the last smuggler is now rotting on a pike.",
    "EVTDESC68021_FALLBACK": "Thanks to the [target_wonder.GetName], and my great diplomatic skill, the Smugglers' Ring in \u00a7Y[Root.GetName]\u00a7! has been destroyed. The head of the last smuggler is now rotting on a pike.",
    "EVTDESC_LT_60201_1": "I kneel beside a fountain in the [target_wonder.GetName] and lower a cup into the water. As I drink deeply a tingling sensation spreads in my whole body, and I am left with energy and vigor I haven't felt in years!",
    "DEATH_ACCIDENT_TRAPS": "was killed by traps",
    "traps_custom_modifier_tt": "May kill anyone who tries to conquer the [FromFrom.GetName]",
    "EVT_TITLE_LT_60401": "Deadly Traps",
    "EVTDESC_LT_60401": "While exploring the depths of the [target_wonder.GetName], both [target_courtier.GetTitledName] and [target_courtier_2.GetTitledName] were caught in one of the deadly traps spread within the structure. What we recovered was barely enough to recognize them by...",
    "EVTOPTA_LT_60401": "Curse you, [old_owner.GetFirstName]!",
    "EVTDESC_LT_60402": "Word has reached me that the traps I installed in the depths of the [target_wonder.GetName] have claimed [target_courtier.GetTitledName] and [target_courtier_2.GetTitledName] as victims! Apparently they were both mangled almost past recognition.",
    "EVTOPTA_LT_60402": "Hah! That's what you get!",
    "upgrade_guardian_of_the_deep": "Guardian of the Deep",
    "upgrade_guardian_of_the_deep_desc": "With eyes downcast in vigilance, the Guardian of the Deep is as unmovable and eternal as the stones found in the depths.",
    "deep_guardian_custom_modifier_tt": "Unlocks the \u00a7YGuardian of the Deep\u00a7! minor title",
    "title_guardian_of_the_deep": "Guardian of the Deep",
    "title_guardian_of_the_deep_desc": "This honorific is awarded to a person who has shown exceptional vigilance and steadfastness.",
    "upgrade_watcher_of_giants": "Watcher of Giants",
    "upgrade_watcher_of_giants_desc": "The Watcher of Giants is responsible for the large statues in the area.",
    "watcher_of_giants_custom_modifier_tt": "Unlocks the \u00a7YWatcher of Giants\u00a7! minor title",
    "title_watcher_of_giants": "Watcher of Giants",
    "title_watcher_of_giants_desc": "This honorific is awarded to a person who has shown exceptional vigilance and skills of observation, and they are ultimately responsible for the maintenance and upkeep of the great statue.",
    "upgrade_wall_walker": "Walker of the Wall",
    "upgrade_wall_walker_desc": "Constantly walking the wall, the Walker of the Wall is one of the few who knows it inside and out.",
    "wall_walker_custom_modifier_tt": "Unlocks the \u00a7YWalker of the Wall\u00a7! minor title",
    "title_wall_walker": "Walker of the Wall",
    "title_wall_walker_desc": "This honorific is awarded to a person who has shown diligence and can spend the majority of their day on their feet, inspecting and maintaining the wall.",
    "upgrade_master_of_tides": "Master of the Tides",
    "upgrade_master_of_tides_desc": "Ultimately responsible for all things marine \u0096 every living soul in the Harbor answers to the Master of the Tides.",
    "master_of_tides_custom_modifier_tt": "Unlocks the \u00a7YMaster of the Tides\u00a7! minor title",
    "title_master_of_tides": "Master of the Tides",
    "title_master_of_tides_desc": "This honorific is awarded to a person who has shown aptitude for all things marine, and the overarching responsibility of the \u00a7YHarbor\u00a7! rests on their shoulders.",
    "upgrade_master_of_the_games": "Master of the Games",
    "upgrade_master_of_the_games_desc": "With a booming voice the Master of the Games can tease forth both cheers and tears, the whole \u00a7YAmphitheater\u00a7! is their stage and responsibility.",
    "game_master_custom_modifier_tt": "Unlocks the \u00a7YMaster of the Games\u00a7! minor title",
    "title_master_of_games": "Master of the Games",
    "title_master_of_games_desc": "This honorific is awarded to a person with a strong personality and presence, capable of bending a whole crowd to their will.",
    "upgrade_royal_custodian": "Royal Custodian",
    "upgrade_royal_custodian_desc": "With nerves of steel and a will of iron the custodian maintains and develops the \u00a7YRoyal Palace\u00a7!.",
    "royal_custodian_custom_modifier_tt": "Unlocks the \u00a7YRoyal Custodian\u00a7! minor title",
    "title_royal_custodian": "Royal Custodian",
    "title_royal_custodian_desc": "This honorific is awarded to a person who has proven themselves dependable, and they are responsible for the upkeep and maintenance of the \u00a7YRoyal Palace\u00a7!.",
    "upgrade_guardian_of_knowledge": "Guardian of Knowledge",
    "upgrade_guardian_of_knowledge_desc": "Responsible for everything inside the \u00a7YUniversity's\u00a7! walls, this title brings with it both gravitas and responsibility.",
    "guardian_of_knowledge_custom_modifier_tt": "Unlocks the \u00a7YGuardian of Knowledge\u00a7! minor title",
    "title_guardian_of_knowledge": "Guardian of Knowledge",
    "title_guardian_of_knowledge_desc": "This honorific is awarded to a person who has shown their wisdom and courage.",
    "upgrade_keeper_of_tomes": "Keeper of the Tomes",
    "upgrade_keeper_of_tomes_desc": "From old ledgers covered in dust to newly minted pages \u0096 all written text needs someone to care for it.",
    "keeper_of_tomes_custom_modifier_tt": "Unlocks the \u00a7YKeeper of the Tomes\u00a7! minor title",
    "title_keeper_of_tomes": "Keeper of the Tomes",
    "title_keeper_of_tomes_desc": "This honorific is awarded to a person who has shown great aptitude for learning and all related skills.",
    "upgrade_keeper_of_the_dead": "Keeper of the Dead",
    "upgrade_keeper_of_the_dead_desc": "Appointed as the one responsible for the eternal rest of the dead in the mausoleum is the Keeper of the Dead.",
    "kepper_of_dead_custom_modifier_tt": "Unlocks the \u00a7YKeeper of the Dead\u00a7! minor title",
    "title_keeper_of_the_dead": "Keeper of the Dead",
    "title_keeper_of_the_dead_desc": "The Keeper of the Dead is responsible for the final rest of everyone placed in the \u00a7YMausoleum\u00a7!.",
    "upgrade_overseer_of_rites": "Overseer of the Rites",
    "upgrade_overseer_of_rites_desc": "Appointed as the one with ultimate authority over all rites executed within the pyramid's walls the Overseer of Rites carry both authority and responsibility upon their shoulders.",
    "overseer_of_rites_custom_modifier_tt": "Unlocks the \u00a7YOverseer of the Rites\u00a7! minor title",
    "title_overseer_of_rites": "Overseer of the Rites",
    "title_overseer_of_rites_desc": "The Overseer of Rites is responsible for all rites and rituals related to the \u00a7YPyramid\u00a7!.",
    "upgrade_custodian_of_the_mosque": "Custodian of the Mosque",
    "upgrade_custodian_of_the_mosque_desc": "As the authority on all daily business and rituals, the Custodian of the Mosque is heeded by all.",
    "custodian_of_mosque_custom_modifier_tt": "Unlocks the \u00a7YCustodian of the Mosque\u00a7! minor title",
    "title_custodian_of_the_mosque": "Custodian of the Mosque",
    "title_custodian_of_the_mosque_desc": "This honorific is awarded to a person who has shown exceptional devotion to [Root.Religion.GetHighGodNameCap].",
    "upgrade_custodian_of_temple": "Custodian of the Temple",
    "upgrade_custodian_of_temple_desc": "As the authority on all daily business and rituals the Custodian of the Temple is heeded by all.",
    "custodian_of_temple_custom_modifier_tt": "Unlocks the \u00a7YCustodian of the Temple\u00a7! minor title",
    "title_custodian_of_the_temple": "Custodian of the Temple",
    "title_custodian_of_the_temple_desc": "This honorific is awarded to a person who has shown exceptional devotion to [Root.Religion.GetHighGodNameCap].",
    "EVTDESC_LT_60501": "[target_vassal.GetTitledName], I want to express my admiration and satisfaction in your handling of the [target_wonder.GetName]!\\n\\nSincerely,\\n[target_liege.GetBestName]",
    "EVTOPTA_LT_60501": "It's all due to your guidance, my liege.",
    "EVTOPTB_LT_60501": "I have done good, haven't I!",
    "EVTDESC_LT_60502": "My liege, the [target_wonder.GetName] is bringing prosperity and fame to the area, and I am grateful that you entrusted such a magnificent structure to my province.\\n\\nSincerely,\\n[target_vassal.GetBestName]",
    "EVTOPTA_LT_60502": "I am glad!",
    "EVT_TITLE_LT_60601": "Crumbling Masterwork",
    "EVTDESC_LT_60601": "A piece of the [target_wonder.GetName] has fallen off \u0096 almost hitting a bystander in the head! Certain areas of the magnificent structure seem to be in dire need of upkeep.",
    "EVTOPTA_LT_60601": "Repairs will be started at once!",
    "EVTOPTB_LT_60601": "Hm, I bet these pieces would fetch a decent price...",
    "title_castellan": "Castellan",
    "title_castellan_desc": "This honorific is awarded to a vassal that is held in high regard by their liege. As Castellan they are responsible for the maintenance and daily ongoings of the Fortress.",
    "castellan_custom_modifier_tt": "Unlocks the \u00a7YCastellan\u00a7! minor title",
    "CHAR_COURTIER_FEMALE": "A courtier named \u00a7Y$NAME$\u00a7! appears at the court of \u00a7Y$EMPLOYER$\u00a7!.",
    "CHAR_COURTIER_MALE": "A courtier named \u00a7Y$NAME$\u00a7! appears at the court of \u00a7Y$EMPLOYER$\u00a7!.",
    "diligent_opinion": "Diligent Opinion",
    "scholar_opinion": "Scholar Opinion",
    "religious_spread_custom_modifier_tt": "\u00a7Y[Root.job_spiritual.GetTitledName]\u00a7! convert \u00a7YCounties\u00a7! faster",
    "culture_convertion_custom_modifier_tt": "\u00a7GConvert Counties\u00a7! to your \u00a7GCulture\u00a7! faster",
    "herb_event_modifier_tt": "Will periodically give you \u00a7YHerbs\u00a7!",
    "EVT_TITLE_LT_60701": "Herbs in the [target_province.GetName]",
    "EVTDESC_LT_60701": "The soothing sounds of the [target_wonder.GetName] embrace me as I walk through the greenery. Reportedly some local herbs have sprouted in the garden, but a secluded patch of grass present an alternative end to this excursion.",
    "EVTOPTA_LT_60701": "I will get the herbs.",
    "EVTOPTB_LT_60701": "A restful nap is exactly what I need!",
    "wonder_temple_buddhist_desc": "The temple is a holy building, a place of devotion and reflection.",
    "upgrade_symbolic_stupa_desc": "Built to symbolize different aspects of Buddhist theology.",
    "upgrade_votive_stupa_desc": "Built to gain spiritual benefits, or to commemorate visits.",
    "hidden_passageways_modifier_tt": "A higher chance of escaping capture after battle",
    "NUDGE_5": "Great Work",
    "NUDGE_6": "Great Work in water",
    "WONDER_REALM_PAUSED_SETUP": "Great Works construction halted",
    "WONDER_REALM_PAUSED_LOG": "The construction of all Great Works within the realm of $OWNER|Y$ has been halted.",
    "WONDER_STAGE_FINISHED_SETUP": "Great Work stage finished",
    "WONDER_STAGE_FINISHED_LOG": "The construction of stage $STAGE|Y$ has finished for the $WONDER|Y$",
    "WONDER_UPGRADE_FINISHED_SETUP": "Great Work Feature finished",
    "WONDER_UPGRADE_FINISHED_LOG": "The construction of the feature $UPGRADE|Y$ has finished for the $WONDER|Y$",
    "WONDERS_INTERFACE_LABEL": "\u00a7YGreat Works\u00a7!",
    "WONDER_STAGE_MODIFIER_SOURCE": "$WONDER$ stage $STAGE$",
    "WONDER_STACKING_PENALTY": "Already Owned Great Works: $PERCENTAGE|%-$",
    "WONDER_STACKING_PENALTY_SAME_TYPE": "Same Type Penalty: $PERCENTAGE|%-$",
    "PREFIX_TITLED_NICK_W_NAME": "$TITLE$ '$NICK$' $NAME$",
    "NICK_W_NAME_NO_TITLE": "'$NICK$' $NAME$",
    "NAME_W_NICK_NO_TITLE": "$NAME$ '$NICK$'",
    "OPEN_WONDER_HISTORY": "\u00a7YOpen Great Work History\u00a7!",
    "OPEN_WONDER_HISTORY_DELAYED": "Shows what has happened to this Great Work since the start of the campaign.",
    "WONDER_HISTORY_RENAME": "\u00a7G$OLD_NAME$\u00a7! has been renamed to \u00a7G$NEW_NAME$\u00a7!",
    "WONDER_STAGE_PROGRESS_NO_CONSTRUCTION_TT": "No ongoing construction",
    "EVTDESC_MNM_3409": "As I retired to my [secret_religion_inductee.GetChamber], I was shocked to find a copy of [secret_religion_inductor.SecretReligion.GetScriptureName] of [secret_religion_inductor.TrueReligion.GetName] faith on my bed! At first, I thought someone had left it there with the intention to frame me, but then I noticed a little note left on top of the open tome. 'I think you will find this interesting. Please, give it a chance. Signed, a friend.",
    "WONDER_TYPE_NAME": "$NAME$",
    "WONDER_TYPE_DESC": "$DESC$",
    "WONDER_STAGE_TIME_COST_TT": "Construction time",
    "WONDER_UPGRADE_TIME_COST_AVAILABLE_TT": "Construction time",
    "WONDER_UPGRADE_TIME_COST_AVAILABLE_TT_DELAYED": "It would take $TIME|Y$ to build this feature. If construction starts now, estimated completion date is $ESTIMATED_FINISH_DATE|Y$.",
    "WONDER_STAGE_TIME_COST_TT_DELAYED": "It would take $TIME|Y$ to build the first stage of this great work. If construction starts now, estimated completion date is $ESTIMATED_FINISH_DATE|Y$.",
    "WONDER_UPGRADE_TICKING_COST_TT": "Monthly cost",
    "WONDER_STAGE_TICKING_COST_TT": "Monthly cost",
    "WONDER_STAGE_TICKING_COST_TT_DELAYED": "Construction cost will be $TICKING_COST|R$\u00a4per month for $TIME_TO_BUILD|Y$ reaching an estimated total cost of $ESTIMATED_TOTAL|R$\u00a4.",
    "WONDER_STAGE_FLAT_COST_TT": "Upfront cost",
    "WONDER_STAGE_FLAT_COST_TT_DELAYED": "$FLAT_COST|R$\u00a4will be deducted from $OWNER|Y$ upon construction start.",
    "NEUTRAL_MODIFIER_TT": "No major modifier is affecting this province.",
    "CLICK_CENTER_CAMERA": "\u00a7GLeft-click to center camera on province\u00a7!",
    "WONDER_STAGE_CONSTRUCT_TT": "Build great work",
    "WONDER_STAGE_CONSTRUCT_TT_DELAYED": "Great Work will cost $FLAT_COST|R$\u00a4to build and $TICKING_COST|R$\u00a4per month during construction. It will take $TIME_TO_BUILD|Y$ to build.\\n$ALLOW_TRIGGER$",
    "WONDER_CONSTRUCTION_IMAGE_TTDELAYED": "Stage $STAGE_NUMBER$\\nFeature slots: \u00a7Y$STAGE_UPGRADE_COUNT$\u00a7! / \u00a7Y$UPGRADE_COUNT_MAX$\u00a7!\\n\\nModifiers:\\n$MODIFIERS$",
    "WONDER_STAGE_NEXT_BUILD_DISABLED_TT_DELAYED": "$MODIFIER_TEXT$$ACTIVE_TRIGGER_TEXT$",
    "WONDER_STAGE_RESUME_DISABLED_TT_DELAYED": "\u00a7RYou can not resume construction if you are bankrupt\u00a7!",
    "WONDER_ACTIVE": "\u00a7Y[FromFrom.GetName]\u00a7! is active",
    "RULE_WONDERS": "Great Works",
    "RULE_WONDERS_ON": "Historical Great Works will exist and rulers are allowed to construct new ones.",
    "RULE_WONDERS_OFF": "No historical Great Works will exist and rulers are not allowed construct new ones.",
    "RULE_WONDERS_HISTORICAL": "Historical Great Works will exist and rulers are allowed to change them. However, rulers cannot construct any new Great Works.",
    "RULE_OPTION_HISTORICAL_RESTRICTIVE": "Historical Restricted",
    "RULE_WONDERS_HISTORICAL_RESTRICTIVE": "Historical great works will exist, but rulers are not allowed to change them in any way, or construct new Great Works.",
    "WONDER_NOT_DAMAGED": "\u00a7Y[FromFrom.GetName]\u00a7! is not damaged",
    "WONDER_ALREADY_LOOTING": "The \u00a7Y[FromFrom.GetWonderTypeShort]\u00a7! is already being looted",
    "WONDER_ALREADY_RESTORING": "The \u00a7Y[FromFrom.GetWonderTypeShort]\u00a7! is already being restored",
    "CHARACTER_NOT_PARTICIPATED_IN_WONDER_CONSTRUCTION": "\u00a7Y$CHARACTER$\u00a7! participated in the construction of the \u00a7Y[FromFrom.GetName]\u00a7!",
    "CHARACTER_OWNS_WONDER": "\u00a7Y$CHARACTER$\u00a7! is the owner of \u00a7Y[FromFrom.GetName]\u00a7!",
    "LOOT": "Loot",
    "WONDER_LOOT_DELAYED_TT": "Start looting the \u00a7Y[FromFrom.GetWonderTypeShort]\u00a7!.\\nThis can yield treasures but will also cause damage and render the \u00a7Y[FromFrom.GetWonderTypeShort]\u00a7! unusable until it has been restored.",
    "STOP_LOOT": "Stop looting",
    "WONDER_STOP_LOOT_DELAYED_TT": "Abandon all looting progress and cause no further damage to the \u00a7Y[FromFrom.GetWonderTypeShort]\u00a7!.",
    "RESTORE": "Restore",
    "STOP_RESTORE": "Stop restoring",
    "WONDER_RESTORE_DELAYED_TT": "Start restoring the \u00a7Y[FromFrom.GetWonderTypeShort]\u00a7! to its former glory!\\nRestoration will cost \u00a7R$FLAT_COST$\u00a7!\u00a4to initiate and $TICKING_COST|R$\u00a4per month until it is completed.\\nIt will take $TIME_TO_BUILD|Y$ to finish restoration and once completed, the \u00a7Y[FromFrom.GetWonderTypeShort]\u00a7! will be at stage \u00a7Y[FromFrom.GetCurrentStageNumber]\u00a7!.",
    "WONDER_STOP_RESTORE_DELAYED_TT": "Abandon all restoration progress for the \u00a7Y[FromFrom.GetWonderTypeShort]\u00a7!.",
    "WONDER_HISTORY_STAGE_LOOTED": "Stage $STAGE_NUMBER$ was looted",
    "WONDER_HISTORY_RESTORED": "Restored to its former glory!",
    "WONDER_HISTORY_UPGRADE_DESTROYED": "The $UPGRADE_NAME$ was destroyed.",
    "WONDER_STAGE_LOOT_PROGRESS_TT": "Stage \u00a7Y[FromFrom.GetCurrentStageNumber]\u00a7! is \u00a7Y$NUM$%\u00a7! looted.",
    "WONDER_RESTORE_PROGRESS_TT": "The damages are $NUM$% repaired.",
    "IS_WONDER_DAMAGED_TRIGGER": "Is damaged",
    "NOT_IS_WONDER_DAMAGED_TRIGGER": "Is NOT damaged",
    "IS_WONDER_BEING_LOOTED_TRIGGER": "Is being looted",
    "NOT_IS_WONDER_BEING_LOOTED_TRIGGER": "Is NOT being looted",
    "IS_WONDER_BEING_RESTORED_TRIGGER": "Is being restored",
    "NOT_IS_WONDER_BEING_RESTORED_TRIGGER": "Is NOT being restored",
    "WONDER_RESTORE_PAUSE_TT": "Pause restoration",
    "WONDER_RESTORE_PAUSE_TT_DELAYED": "While restoration is paused there is no restoration upkeep.",
    "WONDER_RESTORE_RESUME_TT": "Resume restoration",
    "WONDER_RESTORE_RESUME_TT_DELAYED_DISABLED": "\u00a7RYou can not resume restoration if you are bankrupt\u00a7!",
    "HAS_CUSTOM_NAME": "Has custom name",
    "NOT_HAS_CUSTOM_NAME": "Does NOT have custom name",
    "HAS_CUSTOM_DESCRIPTION": "Has custom description",
    "NOT_HAS_CUSTOM_DESCRIPTION": "Does NOT have custom description",
    "OUTLINER_RESTORING_WONDER": "Currently restoring the \u00a7Y[FromFrom.GetWonderTypeShort]\u00a7!",
    "WONDER_LOOTING_FINISHED_SETUP": "Great Work looted",
    "WONDER_LOOTING_FINISHED_LOG": "The looting of stage $STAGE|Y$ has been completed for $WONDER|Y$",
    "WONDER_RESTORATION_FINISHED_SETUP": "Great Work restored",
    "WONDER_RESTORATION_FINISHED_LOG": "$WONDER|Y$ has been restored to its former glory!",
    "WONDER_STAGE_GREATER": "Stage is greater than $STAGE_NUMBER|Y$",
    "NOT_WONDER_STAGE_GREATER": "Stage is NOT greater than $STAGE_NUMBER|Y$",
    "CONFIRM_ABORT_WONDER_RESTORATION_TITLE": "Abort restoration?",
    "CONFIRM_ABORT_WONDER_RESTORATION_CONSTRUCTION_TEXT": "Are you sure you want to abort restoration of the \u00a7Y[FromFrom.GetWonderTypeShort]\u00a7!?\\n\\nNo gold will be refunded for this action",
    "CHAR_IS_INDEPENDENT": "\u00a7Y[This.GetTitledFirstName]\u00a7! is independent",
    "NOT_CHAR_IS_INDEPENDENT": "\u00a7Y[This.GetTitledFirstName]\u00a7! is not independent",
    "PROVINCE_IS_IN_REALM": "\u00a7Y[FromFromFrom.GetName]\u00a7! is part of your \u00a7Y[Root.PrimaryTitle.GetTier]\u00a7!",
    "NOT_PROVINCE_IS_IN_REALM": "\u00a7Y[FromFromFrom.GetName]\u00a7! is NOT part of your \u00a7Y[Root.PrimaryTitle.GetTier]\u00a7!",
    "CURRENT_WONDER_STAGE_LOOTABLE": "The current stage is lootable",
    "NOT_CURRENT_WONDER_STAGE_LOOTABLE": "The current stage is NOT lootable",
    "WONDER_IS_AT_MAX_STAGE": "The Great Work is at its final stage",
    "NOT_WONDER_IS_AT_MAX_STAGE": "The Great Work is NOT at its final stage",
    "String_time_immemorial_cap": "Time immemorial",
    "recruit_wonder_guard": "Recruit an Honor Guard",
    "recruit_wonder_guard_desc": " A Great Work should not be without protection. Let us recruit a force to protect it, and maybe it can be useful also for other missions.",
    "String_Great_work": "Great work",
    "String_great_work": "great work",
    "ANY_WONDER_STARTS": "Any Great Work",
    "ANY_OWNED_WONDER_STARTS": "Any Demesne Great Work",
    "ANY_REALM_WONDER_STARTS": "Any Great Work in Realm",
    "ANY_WONDER_UPGRADE_STARTS": "Any Great Work Feature",
    "ANY_OWNED_WONDER_UPGRADE_STARTS": "Any Demesne Great Work Feature",
    "ANY_REALM_WONDER_UPGRADE_STARTS": "Any Great Work Feature in Realm",
    "ANY_UPGRADE_ON_WONDER": "Any Feature on Great Work",
    "WONDERS_ALL": "All Great Works",
    "WONDERS_ALL_OWNED": "All Demesne Great Work",
    "WONDERS_ALL_REALM": "All Realm Great Work",
    "WONDER_UPGRADES_ALL": "All Great Work Features",
    "WONDER_UPGRADES_ALL_OWNED": "All Demesne Great Work Features",
    "WONDER_UPGRADES_ALL_REALM": "All Realm Great Work Features",
    "WONDERS_ALL_OWNERS": "All Great Work Owners",
    "WONDERS_ALL_UPGRADES_ON": "All Features on Great Work",
    "WONDER_ALL_PREVIOUS_WONDER_OWNERS": "All Previous Owners of Great Work",
    "ANY_WONDER_OWNER_STARTS": "Any Great Work Owner",
    "ANY_PREVIOUS_WONDER_OWNER_STARTS": "Any Previous Owner of Great Work",
    "WONDER_BEING_BUILT_IN_PROVINCE": "A great work is being built in \u00a7Y[This.GetName]\u00a7!",
    "WONDER_BEING_BUILT_BY_CHARACTER": "A great work is being built by \u00a7Y[This.GetFirstName]\u00a7!",
    "WONDER_NOT_BEING_BUILT_IN_PROVINCE": "A great work is not being built in \u00a7Y[This.GetName]\u00a7!",
    "WONDER_NOT_BEING_BUILT_BY_CHARACTER": "A great work is not being built by \u00a7Y[This.GetFirstName]\u00a7!",
    "WONDER_UPGRADE_BEING_BUILT_IN_PROVINCE": "A great work feature is being built in \u00a7Y[This.GetName]\u00a7!",
    "WONDER_UPGRADE_BEING_BUILT_BY_CHARACTER": "A great work feature is being built by \u00a7Y[This.GetFirstName]\u00a7!",
    "WONDER_UPGRADE_NOT_BEING_BUILT_IN_PROVINCE": "A great work feature is not being built in \u00a7Y[This.GetName]\u00a7!",
    "WONDER_UPGRADE_NOT_BEING_BUILT_BY_CHARACTER": "A great work feature is not being built by \u00a7Y[This.GetFirstName]\u00a7!",
    "WONDER_BUILT_IN_PROVINCE": "A great work has been built in \u00a7Y[This.GetName]\u00a7!",
    "WONDER_BUILT_BY_CHARACTER": "A great work has been built by \u00a7Y[This.GetFirstName]\u00a7!",
    "WONDER_NOT_BUILT_IN_PROVINCE": "A great work has not been built in \u00a7Y[This.GetName]\u00a7!",
    "WONDER_NOT_BUILT_BY_CHARACTER": "A great work has not been built by \u00a7Y[This.GetFirstName]\u00a7!",
    "WONDER_UPGRADE_BUILT_IN_PROVINCE": "A great work feature has been built in \u00a7Y[This.GetName]\u00a7!",
    "WONDER_UPGRADE_BUILT_BY_CHARACTER": "A great work feature has been built by \u00a7Y[This.GetFirstName]\u00a7!",
    "WONDER_UPGRADE_NOT_BUILT_IN_PROVINCE": "A great work feature has not been built in \u00a7Y[This.GetName]\u00a7!",
    "WONDER_UPGRADE_NOT_BUILT_BY_CHARACTER": "A great work feature has not been built by \u00a7Y[This.GetFirstName]\u00a7!",
    "WONDER_NUM_OF_CHARACTER": "\u00a7Y[This.GetFirstName]\u00a7! has $COMPARISON$ $VALUE|Y$ great works",
    "WONDER_NUM_IN_PROVINCE": "\u00a7Y[This.GetName]\u00a7! has $COMPARISON$ $VALUE|Y$ great works",
    "WONDER_UPGRADE_NUM_OF_CHARACTER": "\u00a7Y[This.GetFirstName]\u00a7! has $COMPARISON$ $VALUE|Y$ great work features",
    "WONDER_UPGRADE_NUM_IN_PROVINCE": "\u00a7Y[This.GetName]\u00a7! has $COMPARISON$ $VALUE|Y$ great work features",
    "WONDER_UPGRADE_COMPLETE": "Great Work feature is complete",
    "WONDER_ALREADY_HAS_UPGRADE": "Great Work does not already have a feature of this type",
    "WONDER_OWNER_CHANGE_SETUP": "Great Work Owner Change",
    "WONDER_STAGE_ABORT_TT_DELAYED": "Aborting stage construction will \u00a7Rremove\u00a7! the Great Work from the province!",
    "WONDER_UPGRADE_ABORT_TT_DELAYED": "Aborting feature construction will \u00a7Rremove\u00a7! the feature from the Great Work!",
    "WONDERS_MODIFIER_STRING": "Great Works",
    "WONDER_UPGRADE_IS_NOT": "Great Work feature is NOT",
    "WONDER_UPGRADE_IS": "Great Work feature is",
    "WONDER_UPGRADE_EXISTS": "Great Work feature exists",
    "WONDER_BUILD_COST_MODIFIER": "Great Work Build Cost",
    "WONDER_BUILD_TIME_MODIFIER": "Great Work Build Time",
    "WONDER_IS_NOT": "Great Work is NOT",
    "WONDER_IS": "Great Work is",
    "WONDER_EXISTS": "Great Work exists",
    "EXPENSE_WONDER_CONSTRUCTION": "Great Work construction",
    "CONFIRM_ABORT_WONDER_STAGE_CONSTRUCTION_TEXT": "Are you sure you want to abort construction of the \u00a7Y[FromFrom.GetWonderTypeShort]\u00a7!\\n\\nNo gold will be refunded for this action",
    "CONFIRM_ABORT_WONDER_UPGRADE_CONSTRUCTION_TEXT": "Are you sure you want to abort construction of the feature?\\n\\nNo gold will be refunded for this action",
    "WONDER_UPGRADES_TITLE_LABEL": "Great Work Features",
    "WONDER_CONSTRUCTION_VIEW_TITLE": "Construct Great Work",
    "rename_wonder_desc": "Change the name of \u00a7Y'[FromFrom.GetName]'\u00a7! to whatever you desire.",
    "WONDERS_CAP": "Great Works",
    "SHOW_CYCLE_WONDERS": "Show great works that are owned by this character.\\nPress again to cycle between all owned great works.",
    "HAS_NO_WONDERS": "This character owns no Great Works",
    "WONDER_EXTEND_DESC": "\u00a7YOpen the Great Work View\u00a7!",
    "WONDER_EXTEND_DESC_LONG": "Extend the interface to show the state of the great work in this province",
    "WONDER_IMAGE_DESC": "[FromFrom.GetDesc]\\n\\n\u00a7GLeft-click to open the great work view\u00a7!",
    "CONSTRUCT_WONDER": "Construct a great work in this province",
    "VIEW_BUILDABLE_WONDERS": "View great work construction",
    "VIEW_BUILDABLE_WONDERS_LONG": "See which great works could be built in this province, if it was under your control",
    "NO_BUILDABLE_WONDERS_OWNED": "You are currently not eligible to build any great works in this province",
    "NO_BUILDABLE_WONDERS_NOT_OWNED": "You would not currently be eligible to build any great works in this province, even if it was under your control",
    "WONDER_VIEW_BUTTON_DESC": "Show great work",
    "WONDER_VIEW_BUTTON_DESC_LONG": "Open the great work view to see a detailed breakdown of the \u00a7Y[FromFrom.GetName]\u00a7!",
    "alert_wonder_construction_paused_instant": "\u00a7YGreat Work Construction Paused\u00a7!",
    "alert_wonder_construction_paused_delayed": "The following great works have paused construction:\\n\\n$LIST$",
    "alert_wonder_construction_paused_name": "Paused great work construction",
    "WONDER_CONSTRUCTION_STARTED_IN_PROVINCE": "Construction of a great work stage has started in \u00a7Y[This.GetName]\u00a7!",
    "WONDER_CONSTRUCTION_STARTED_BY_CHARACTER": "\u00a7Y[This.GetFirstName]\u00a7! has started constructing a great work stage",
    "WONDER_CONSTRUCTION_NOT_STARTED_IN_PROVINCE": "Construction of a great work stage has not started in \u00a7Y[This.GetName]\u00a7!",
    "WONDER_CONSTRUCTION_NOT_STARTED_BY_CHARACTER": "\u00a7Y[This.GetFirstName]\u00a7! has not started constructing a great work stage",
    "WONDER_UPGRADE_CONSTRUCTION_STARTED_IN_PROVINCE": "Construction of a great work feature has started in \u00a7Y[This.GetName]\u00a7!",
    "WONDER_UPGRADE_CONSTRUCTION_STARTED_BY_CHARACTER": "\u00a7Y[This.GetFirstName]\u00a7! has started constructing a great work feature",
    "WONDER_UPGRADE_CONSTRUCTION_NOT_STARTED_IN_PROVINCE": "Construction of a great work feature has not started in \u00a7Y[This.GetName]\u00a7!",
    "WONDER_UPGRADE_CONSTRUCTION_NOT_STARTED_BY_CHARACTER": "\u00a7Y[This.GetFirstName]\u00a7! has not started constructing a great work feature",
    "obj_create_wonder_title": "Build a Great Work",
    "create_wonder_effect_tooltip": "Completing this ambition will result in an extra Feature being built on your Great Work.",
    "create_wonder_condition_tooltip": "Build a Great Work to at least stage two.",
    "WONDER_CONSTRUCTION_VIEW_FLAVOR_TEXT": "These constructions are not for the faint of heart. Decades will pass, and heaps of gold will be spent, but at the end of it all you might be left with one of the greatest buildings in the world...",
    "WONDER_UPGRADE_BUILT_FOR_WONDER": "A feature has been built for \u00a7Y[This.GetName]\u00a7!",
    "WONDER_UPGRADE_BUILT": "Feature has been built",
    "WONDER_UPGRADE_NOT_BUILT_FOR_WONDER": "A feature has not been built for \u00a7Y[This.GetName]\u00a7!",
    "WONDER_UPGRADE_NOT_BUILT": "A feature has not been built",
    "WONDER_UPGRADE_NUM_IN_WONDER": "\u00a7Y[This.GetName]\u00a7! has $COMPARISON$ $VALUE|Y$ features",
    "WONDER_UPGRADE_AGE_TRIGGER": "Feature is $COMPARISON$ $VALUE|Y$ years old",
    "HAS_WONDER_UPGRADE_FLAG_ON_WONDER": "Does have the $FLAG|Y$ flag on any feature",
    "HAS_NOT_WONDER_UPGRADE_FLAG_ON_WONDER": "Does not have the $FLAG|Y$ flag on any feature",
    "WONDER_EFFECT_FINISH_UPGRADE_ANY": "Finish any features",
    "WONDER_EFFECT_FINISH_IF_OF_TYPE": "Finish the feature $WONDER_UPGRADE_TYPE|Y$ if it is being constructed",
    "WONDER_EFFECT_DESTROY_UPGRADE_SPECIFIC": "Destroy any feature of type $WONDER_UPGRADE_TYPE|Y$",
    "WONDER_EFFECT_DESTROY_UPGRADE": "Destroy feature",
    "WONDER_HAS_FREE_SLOT": "Has a free feature slot",
    "WONDER_ALREADY_BUILDING": "A feature is not already being built",
    "WONDER_ADD_UPGRADE_SLOT": "Add $NUM|Y$ feature slot",
    "WONDER_ADD_UPGRADE_SLOTS": "Add $NUM|Y$ feature slots",
    "WONDER_REMOVE_UPGRADE_SLOT": "Remove $NUM|Y$ feature slot",
    "WONDER_REMOVE_UPGRADE_SLOTS": "Remove $NUM|Y$ feature slots",
    "WONDER_STAGE_NUMBERED_TT_DELAYED_COMPLETE": "Feature slots unlocked: $UNLOCKED_UPGRADE_SLOTS|Y$\\nCompleted by: $COMPLETED_BY|Y$ on $COMPLETED_ON|Y$\\nAge: $AGE|Y$\\n\\n$MODIFIER_TEXT$$ALLOW_TRIGGER_TEXT$",
    "WONDER_STAGE_NUMBERED_TT_DELAYED_NOT_COMPLETE": "Cost per month: $TICKING_COST|R$\u00a4\\nFlat cost: $FLAT_COST|R$\u00a4\\nFeature slots unlocked: $UNLOCKED_UPGRADE_SLOTS|Y$\\nEstimated time to complete: $BUILD_TIME|Y$\\n\\n$MODIFIER_TEXT$$ALLOW_TRIGGER_TEXT$",
    "WONDER_UPGRADE_COUNTER_TT": "$NUM_USED|Y$ feature slots used of $NUM_TOTAL|Y$ total",
    "WONDER_UPGRADE_COUNTER_USED_SINGULAR_TT": "$NUM_USED|Y$ feature slot used of $NUM_TOTAL|Y$ total",
    "WONDER_UPGRADE_PAUSE_TT": "Pause feature construction",
    "WONDER_UPGRADE_PAUSE_TT_DELAYED": "If you pause construction of a feature you pay no feature construction upkeep",
    "WONDER_UPGRADE_RESUME_TT": "Resume feature construction",
    "WONDER_UPGRADE_RESUME_TT_DELAYED": "Resuming feature construction will cost \u00a7R[From.GetTickingCost]\u00a7!\u00a4per month",
    "WONDER_UPGRADE_ABORT_TT": "Abort feature construction",
    "WONDER_UPGRADE_CONSTRUCT_TT": "Build feature",
    "WONDER_UPGRADE_CONSTRUCT_TT_DELAYED": "Feature will cost $FLAT_COST|R$\u00a4to build and $TICKING_COST|R$\u00a4per month during construction. It will take $TIME_TO_BUILD|Y$ to build.\\n$ALLOW_TRIGGER$",
    "WONDER_UPGRADE_AVAILABLE_NAME_TT_DELAYED": "$DESCRIPTION$\\nFeature will cost $FLAT_COST|R$\u00a4to build and $TICKING_COST|R$\u00a4per month during construction.\\n$ALLOW_TRIGGER$",
    "WONDER_UPGRADE_FLAT_COST_TT_DELAYED": "$FLAT_COST|R$\u00a4will be deducted from $OWNER|Y$ upon feature construction start.",
    "WONDER_HISTORY_UPGRADE_CONSTRUCTION_STARTED": "Construction of the \u00a7G$UPGRADE_NAME$\u00a7! feature started",
    "WONDER_HISTORY_UPGRADE_CONSTRUCTION_FINISHED": "Construction of the \u00a7G$UPGRADE_NAME$\u00a7! feature was completed",
    "WONDER_UPGRADE_CONSTRUCTION_NOT_STARTED": "Construction of a feature has not started for \u00a7Y[This.GetName]\u00a7!",
    "WONDER_SPECIFIC_UPGRADE_CONSTRUCTION_STARTED_BY_CHARACTER": "\u00a7Y[This.GetFirstName]\u00a7! has started constructing a feature of type \u00a7Y$WONDER_UPGRADE_TYPE$\u00a7!",
    "WONDER_SPECIFIC_UPGRADE_CONSTRUCTION_NOT_STARTED_BY_CHARACTER": "\u00a7Y[This.GetFirstName]\u00a7! has not started constructing a feature of type \u00a7Y$WONDER_UPGRADE_TYPE$\u00a7!",
    "intimidation_possible_modifier_tt": "Enables \u00a7YIntimidation\u00a7! attempts",
    "recruit_gladiator_modifier_tt": "Enables the recruitment of \u00a7YGladiators\u00a7!",
    "produces_alcohol_modifier_tt": "Enables the \u00a7YSend Alcohol Gift\u00a7! Decision",
    "religion_feature_pyramids": "Pyramid Creation",
    "religion_feature_pyramids_desc": "Pyramids were built many years ago by the ancients, we too should aspire to such lofty heights.",
    "tooltip_religion_feature_pyramids": "\u00a7GIndependent lieges of this religion can construct pyramids\u00a7!",
    "upgrade_automata_throne": "Automata Throne",
    "upgrade_automata_throne_desc": "By some complex machinery this throne can raise itself up and down at will.",
    "upgrade_ballroom": "Ballroom",
    "upgrade_ballroom_desc": "A place for the nobility to meet, dance and scheme at feasts",
    "EVTOPTBHF23440": "We should hold it in the Grand Amphitheater!",
    "EVTOPTBHF23440_tt": "This option is available as you own a \u00a7YGrand Amphitheater\u00a7!.",
    "EVTOPTEHF23445": "How about some lions?",
    "EVTOPTEHF23445_tt": "This option is available as you own the \u00a7YAnimal Cages\u00a7! feature",
    "animal_cages_modifier_tt": "Enables the use of \u00a7YDangerous Animals\u00a7Y in the Arena",
    "upgrade_earthquake_damage_small": "Earthquake Damage",
    "upgrade_earthquake_damage_small_desc": "This great work has taken damage from an earthquake and has not been repaired.",
    "upgrade_earthquake_damage_medium": "Earthquake Damage",
    "upgrade_earthquake_damage_medium_desc": "This great work has taken damage from an earthquake and has not been repaired.",
    "upgrade_earthquake_damage_large": "Earthquake Damage",
    "upgrade_earthquake_damage_large_desc": "This great work has taken damage from an earthquake and has not been repaired.",
    "wonder_aztec_pyramid": "Aztec Pyramid",
    "repair_wonder_decision": "Repair Lighthouse",
    "repair_wonder_decision_desc": "You will set aside funds to repair the damage on the lighthouse removing the negative features.",
    "wonder_temple_hindu_konark": "Konark Sun Temple",
    "wonder_temple_hindu_konark_desc": "This temple was built in the form of a giant ornamented chariot dedicated to the Sun God, Surya.",
    "wonder_underground_city_petra": "Petra",
    "wonder_underground_city_petra_desc": "The great desert city of Petra has existed for hundreds of years",
    "wonder_house_of_wisdom": "House of Wisdom",
    "wonder_house_of_wisdom_desc": "A grand library, housing much of the world's knowledge.",
    "wonder_apostolic_palace": "Apostolic Palace",
    "wonder_apostolic_palace_desc": "The palace of the Pope himself, sitting at the heart of Rome.",
    "wonder_statue_horse": "Statue of a Horse",
    "wonder_statue_horse_desc": "A grand statue of a majestic stallion!",
    "CHARACTER_NOT_PARTICIPATED_IN_WONDER_LOOTING": "\u00a7Y$CHARACTER$\u00a7! participated in the looting of \u00a7Y[FromFrom.GetName]\u00a7!",
    "WONDER_IS_BEING_LOOTED": "Great Work is being looted",
    "NOT_WONDER_IS_BEING_LOOTED": "Great Work is NOT being looted",
    "WONDER_LOOT_INDEPENDENT_REALM_RULER_REQUIREMENT": "Only the independent ruler of the realm is allowed to loot Great Works",
    "WONDER_MIN_LOOTABLE_STAGE_REQUIREMENT": "Only Great Works that has completed stage $STAGE_NUMBER|Y$ can be looted",
    "WONDER_RESTORE_INDEPENDENT_REALM_RULER_REQUIREMENT": "Only the independent ruler of the realm is allowed to restore Great Works",
    "WONDER_RESTORE_GOLD_COST_REQUIREMENT": "The up front cost of $COST$\u00a4cannot be paid",
    "AVAILABLE_WONDER_UPGRADES": "Available features",
    "WONDER_BEING_LOOTED": "\u00a7Y[FromFrom.GetName]\u00a7! is being looted",
    "NOT_WONDER_BEING_LOOTED": "\u00a7Y[FromFrom.GetName]\u00a7! is NOT being looted",
    "NOT_WONDER_ACTIVE": "\u00a7Y[FromFrom.GetName]\u00a7! is NOT active",
    "String_Sphinx": "Great Sphinx of Giza",
    "String_MythologicalBeast": "Mythological Beast Statue",
    "upgrade_inner_sanctuary_desc": "A sacred and reserved space inside the temple where only the high ranking priests can enter.",
    "upgrade_vestibule_desc": "Two pillars of bronze frame the entrance to the temple, bidding all worshipers welcome.",
    "upgrade_holy_place_desc": "Cherubim, palm trees, and open flowers, all overlaid with gold, are carved into the cedar-lined walls. The floor is of cypress overlaid with gold. The door posts, of olive wood, support folding doors of cypress.",
    "upgrade_holy_of_holies_desc": "The inner sanctuary within the temple. It is located in the westernmost end of the temple building, a perfect cube, prepared to contain the Ark of the Covenant.",
    "upgrade_inner_court_desc": "The Inner Court, or Court of the Priests, is separated from the space beyond by a wall of three courses of hewn stone, surmounted by cedar beams. It contains the Altar of burnt-offering, the Brazen Sea laver, and ten other lavers.",
    "upgrade_great_seminars_desc": "A large hall where famous scholars can give public lectures, attracting many attendees.",
    "upgrade_wing_of_diplomacy_desc": "The intricate arts of negotiation, rhetoric, and ultimately convincing others of where their best interests lie are taught and practiced here.",
    "upgrade_wing_of_martial_desc": "Here the classic works on history and ancient wars are taught and discussed, as well as old and new treatises on the art of warfare.",
    "upgrade_wing_of_stewardship_desc": "The principles of accounting, finance, and economics are taught here.",
    "upgrade_wing_of_intrigue_desc": "From what plants to use for making deadly concoctions to the art of cipher, all that a budding spy needs to know is taught here.",
    "upgrade_wing_of_learning_desc": "Here the foundations of logic and mathematics are taught, as well as physics, metaphysics, and the scriptures.",
    "gardener_opinion": "Gardener Opinion",
    "EVTDESC50022": "[enemy_liege.GetTitledFirstName] sacrificed [sacrificed.GetTitledFirstName] in the name of [enemy_liege.Religion.GetHighGodName].",
    "String_most_recently_added": "splendid [This.GetName] draw[This.GetSingularS] a lot of attention",
    "recently_sent_alcohol_gift": "Recently Sent Alcoholic Gift"
}